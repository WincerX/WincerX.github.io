<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wincer&#39;s blog</title>
  
  <subtitle>夜空のように、悲しい世界を優しく包みます</subtitle>
  <link href="http://wincer.icu/atom.xml" rel="self"/>
  
  <link href="http://wincer.icu/"/>
  <updated>2021-08-19T13:17:06.623Z</updated>
  <id>http://wincer.icu/</id>
  
  <author>
    <name>Wincer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wincer.icu/p/Hello,World!.html"/>
    <id>http://wincer.icu/p/Hello,World!.html</id>
    <published>2021-08-19T04:45:59.603Z</published>
    <updated>2021-08-19T13:17:06.623Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="Welcome-to-Wincer-s-Blog"><a href="#Welcome-to-Wincer-s-Blog" class="headerlink" title=" Welcome to Wincer's Blog!"></a><p><center> Welcome to Wincer's Blog!</center></p></h1><p>从去年疫情以来，对于这个博客我经历了各种思考和尝试。好的服务器、云空间太贵，低价的 VPS 和云空间不是速度慢就是限并发限 Idle，自己现在用的服务器也另有他用；尝试过WordPress和自行开发主题，但一是没有那么多精力自己写文件，二是对于很多语言还不懂……最后，我决定将这个朴实无华的小站放在了 Github 上。自建站以来，尝试过顺眼的主题，但配置太麻烦，功能不够齐全，可用性达不到要求，很多东西不兼容或是实现起来比较困难等等</p><p>自从我去年3月份的第一次尝试以来，备考、升学……等等这些乱七八糟的事儿，一直处于一个比较繁忙的状态。同时我也算是处在人生的十字路口，思路和心态比较凌乱，一直没有顾上维护这个小站。<span class="hint--info hint--rounded hint--top" data-hint="2021/08/19" ontouchstart>今天</span>我再次重置了这个博客，尽管当时的许多设置和文章业已丢失，但总归是再次布置妥当了</p><p>最近一段时间会尽力把之前想写的、丢失的博文补上。重开这个博客的另一个目的就是希望自己能总结、记录一些东西，顺便给现在有些失落的自己一个释放的空间</p><p>顺便说一下，由于时间有限等多种因素，博文可能会写的很简略。如果您有幸阅读某一篇博文但却未能完全理解的话，充分利用搜索引擎和评论区可以事半功倍</p><p>特别说明：文章在编写过程中将暂时关闭评论功能。如您发现未完成的文章中包含的错误，请用右下角的DaoVoice联络器或者左侧电邮与我联系，谢谢</p><p>写在最后最后：</p><h1 id="欢迎访问！您的支持是我最大的动力"><a href="#欢迎访问！您的支持是我最大的动力" class="headerlink" title="欢迎访问！您的支持是我最大的动力"></a><center>欢迎访问！您的支持是我最大的动力</center></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;Welco</summary>
      
    
    
    
    <category term="杂谈" scheme="http://wincer.icu/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="http://wincer.icu/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>珂朵莉树学习笔记</title>
    <link href="http://wincer.icu/p/ODT.html"/>
    <id>http://wincer.icu/p/ODT.html</id>
    <published>2021-08-13T10:31:23.000Z</published>
    <updated>2021-08-19T13:16:31.498Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><p>珂朵莉树（$\text{ODT}$），即$\text{Old Driver Tree}$（老司机树），是 $\text{lxl}$ 大佬创造出的一种<del>像珂朵莉挥剑一样暴力的</del>暴力算法，吊打线段树，暴踩标算，<del>迅速AK IOI</del></p><p>至于我学习的原因，一是它作为一种非常牛逼的暴力算法，甚至可以$\text{AC}$某些题；二是出于信仰，据不可靠研究表明，研究珂学对于OIer帮助极大</p><span id="more"></span><hr><p>总结一下，珂朵莉树分为4个部分</p><ul><li>构造</li><li>初始化</li><li>Split（分裂）</li><li>推平</li></ul><hr><h1 id="珂朵莉树是什么"><a href="#珂朵莉树是什么" class="headerlink" title="珂朵莉树是什么"></a>珂朵莉树是什么</h1><p>珂朵莉树，又称 $\text{Old Driver Tree(ODT)}$（老司机树）</p><p>由一名用户名为 $\text{Old Driver}$ 的CF用户在$\text{CF896C}$上首次使用，此人就是为你谷著名神犇、毒瘤出题者、<del>暴政</del>管理员 <font color=DarkViolet> $\text{lxl (noip)}$ </font></p><p>是一种基于 $\text{std::set}$ 的暴力数据结构</p><p><img src="https://img-service.csdnimg.cn/img_convert/65e2372d0cf6a0a465b9360ead71867c.png" alt=""></p><h1 id="珂朵莉树的使用"><a href="#珂朵莉树的使用" class="headerlink" title="珂朵莉树的使用"></a>珂朵莉树的使用</h1><p>在数据随机的情况下使用，使一整段区间内的东西变得一样</p><h1 id="珂朵莉树的构造"><a href="#珂朵莉树的构造" class="headerlink" title="珂朵莉树的构造"></a>珂朵莉树的构造</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line">set&lt;Node&gt; s;</span><br></pre></td></tr></table></figure><p>这是一个没有初始化的珂朵莉树</p><h1 id="珂朵莉树的初始化"><a href="#珂朵莉树的初始化" class="headerlink" title="珂朵莉树的初始化"></a>珂朵莉树的初始化</h1><p>一般来说，我们通过给定数据，向其中不断插入区间长度为1的区间来完成初始化</p><p>For example: $\text{ CF896C }$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r;   <span class="comment">//范围</span></span><br><span class="line">    <span class="keyword">mutable</span> LL v;   <span class="comment">//数值</span></span><br><span class="line">    <span class="built_in">node</span>(<span class="keyword">int</span> L, <span class="keyword">int</span> R = <span class="number">-1</span>, LL V = <span class="number">0</span>) : <span class="built_in">l</span>(L), <span class="built_in">r</span>(R), <span class="built_in">v</span>(V) &#123;&#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node &amp;o) <span class="keyword">const</span>   <span class="comment">//重载运算符</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> l &lt; o.l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>表示 $\text{ l, r }$ 这一个区间中所有的数都是$\text{v}$</p><h2 id="读入"><a href="#读入" class="headerlink" title="读入"></a>读入</h2><p>开一个$\text{set}$存$\text{Node}$，$\text{Node}$根据输入而定</p><h1 id="珂朵莉树的宏定义"><a href="#珂朵莉树的宏定义" class="headerlink" title="珂朵莉树的宏定义"></a>珂朵莉树的宏定义</h1><p>更方便</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S_IT set<span class="meta-string">&lt;Node&gt;</span>::iterator <span class="comment">//S_IT = set_iterator</span></span></span><br></pre></td></tr></table></figure><h1 id="珂朵莉树的核心操作：-text-Split（分裂）"><a href="#珂朵莉树的核心操作：-text-Split（分裂）" class="headerlink" title="珂朵莉树的核心操作：$\text{Split（分裂）}$"></a>珂朵莉树的核心操作：$\text{Split（分裂）}$</h1><p>一个集合中，有一部分需要修改，而另一部分不需要修改，就把集合拆开，拆成两部分</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IT <span class="title">split</span><span class="params">(<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IT it = s.<span class="built_in">lower_bound</span>(<span class="built_in">node</span>(pos));       <span class="comment">//找到首个不小于pos的set</span></span><br><span class="line">    <span class="keyword">if</span> (it != s.<span class="built_in">end</span>() &amp;&amp; it-&gt;l == pos)</span><br><span class="line">    &#123;                                       <span class="comment">//无需，直接返回</span></span><br><span class="line">        <span class="keyword">return</span> it;</span><br><span class="line">    &#125;</span><br><span class="line">    --it;                                   <span class="comment">//否则一定在前一个区间中</span></span><br><span class="line">    <span class="keyword">int</span> L = it-&gt;l, R = it-&gt;r;               <span class="comment">//【l,r】就是要分裂的区间</span></span><br><span class="line">    LL V = it-&gt;v;                           <span class="comment">//取出值</span></span><br><span class="line">    s.<span class="built_in">erase</span>(it);                            <span class="comment">//删除原集合</span></span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="built_in">node</span>(L, pos - <span class="number">1</span>, V));          <span class="comment">//构建前半段的新结合</span></span><br><span class="line">    <span class="keyword">return</span> s.<span class="built_in">insert</span>(<span class="built_in">node</span>(pos, R, V)).first; <span class="comment">//构建后半段的新集合并且返回地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="珂朵莉树的推平"><a href="#珂朵莉树的推平" class="headerlink" title="珂朵莉树的推平"></a>珂朵莉树的推平</h1><p>降低复杂度，接近 ${mLog_{n}}$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">assign_val</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, LL val)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">assign_val</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, LL val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IT itl = <span class="built_in">split</span>(r+<span class="number">1</span>), itr = <span class="built_in">split</span>(l); <span class="comment">//求出要被摊平区间的收尾地址</span></span><br><span class="line">    s.<span class="built_in">erase</span>(itl, itr);                     <span class="comment">//删除原集合</span></span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="built_in">node</span>(l, r, val));             <span class="comment">//添加新集合</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h1><h2 id="区间加"><a href="#区间加" class="headerlink" title="区间加"></a>区间加</h2><p>找到对应集合暴力加</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, LL val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IT itl = <span class="built_in">split</span>(l), itr = <span class="built_in">split</span>(r + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (; itl != itr; ++itl)</span><br><span class="line">        itl-&gt;v += val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区间第-k-小"><a href="#区间第-k-小" class="headerlink" title="区间第$k$小"></a>区间第$k$小</h2><p>把元素取出，暴力排序，暴力查找第k小（乘上集合的个数）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LL <span class="title">rank</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;pair&lt;LL, <span class="keyword">int</span>&gt;&gt; vp;</span><br><span class="line">    IT itl = <span class="built_in">split</span>(l), itr = <span class="built_in">split</span>(r + <span class="number">1</span>);</span><br><span class="line">    vp.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span> (; itl != itr; ++itl)</span><br><span class="line">        vp.<span class="built_in">push_back</span>(pair&lt;LL, <span class="keyword">int</span>&gt;(itl-&gt;v, itl-&gt;r - itl-&gt;l + <span class="number">1</span>));</span><br><span class="line">    <span class="built_in">sort</span>(vp.<span class="built_in">begin</span>(), vp.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;pair&lt;LL, <span class="keyword">int</span>&gt;&gt;::iterator it = vp.<span class="built_in">begin</span>(); it != vp.<span class="built_in">end</span>(); ++it)</span><br><span class="line">    &#123;</span><br><span class="line">        k -= it-&gt;second;</span><br><span class="line">        <span class="keyword">if</span> (k &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> it-&gt;first;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区间幂次和"><a href="#区间幂次和" class="headerlink" title="区间幂次和"></a>区间幂次和</h2><p>暴力找到元素，快速幂，加入答案（乘上集合的个数）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LL <span class="title">pown</span><span class="params">(LL a, LL b, LL mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    LL ans = a % mod;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            res = res * ans % mod;</span><br><span class="line">        ans = ans * ans % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">sum</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ex, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IT itl = <span class="built_in">split</span>(l), itr = <span class="built_in">split</span>(r + <span class="number">1</span>);</span><br><span class="line">    LL res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; itl != itr; ++itl)</span><br><span class="line">        res = (res + (LL)(itl-&gt;r - itl-&gt;l + <span class="number">1</span>) * <span class="built_in">pown</span>(itl-&gt;v, <span class="built_in">LL</span>(ex), <span class="built_in">LL</span>(mod))) % mod;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;珂朵莉树（$\text{ODT}$），即$\text{Old Driver Tree}$（老司机树），是 $\text{lxl}$ 大佬创造出的一种&lt;del&gt;像珂朵莉挥剑一样暴力的&lt;/del&gt;暴力算法，吊打线段树，暴踩标算，&lt;del&gt;迅速AK IOI&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;至于我学习的原因，一是它作为一种非常牛逼的暴力算法，甚至可以$\text{AC}$某些题；二是出于信仰，据不可靠研究表明，研究珂学对于OIer帮助极大&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://wincer.icu/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="珂朵莉树" scheme="http://wincer.icu/tags/%E7%8F%82%E6%9C%B5%E8%8E%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建全面指南+基于NexT的优化</title>
    <link href="http://wincer.icu/p/Hexo-Guide.html"/>
    <id>http://wincer.icu/p/Hexo-Guide.html</id>
    <published>2021-08-06T01:51:34.000Z</published>
    <updated>2021-08-19T13:17:00.851Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><p>$\text{Hexo}$ 是一个优秀的轻量级博客系统，本身可以兼容各种功能</p><p>而 $\text{NexT}$，则是一个集成有非常多功能、并且兼容性极好</p><p>因此本文选择了 $\text{Hexo+NexT}$ 的搭配</p><span id="more"></span><h1 id="第一部分：-text-Hexo-简介"><a href="#第一部分：-text-Hexo-简介" class="headerlink" title="第一部分： $\text{Hexo}$ 简介"></a>第一部分： $\text{Hexo}$ 简介</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。可以进入hexo官网进行详细查看（毕竟官方文档很有用），因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h1 id="第二部分：-配置-text-Hexo"><a href="#第二部分：-配置-text-Hexo" class="headerlink" title="第二部分： 配置 $\text{Hexo}$"></a>第二部分： 配置 $\text{Hexo}$</h1><h2 id="1-安装-text-Git"><a href="#1-安装-text-Git" class="headerlink" title="1. 安装 $\text{Git}$"></a>1. 安装 $\text{Git}$</h2><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。</p><p>请到<a href="https://gitforwindows.org/"><strong>官网</strong></a>下载，然后打开 <strong>$\text{Git Bash}$命令行工具</strong></p><p>或者到<a href="https://npm.taobao.org/mirrors/git-for-windows/v2.33.0-rc1.windows.1/"><strong>国内镜像站</strong></a>，找到相应的最新的版本</p><p>安装完成后，使用 <code>git version</code> 验证版本</p><h2 id="2-安装-text-Node-JS"><a href="#2-安装-text-Node-JS" class="headerlink" title="2. 安装 $\text{Node.JS}$"></a>2. 安装 $\text{Node.JS}$</h2><p>Hexo基于<a href="https://nodejs.org/en/download/">Node.JS</a>，因此需要安装Node.Js和<code>npm</code>工具。</p><p><a href="https://npm.taobao.org/mirrors/python/3.9.6/"><strong>国内镜像站</strong></a>，找到对应的最新版本</p><p>选择 $\text{LTS}$ 版本即可</p><p>这样一来，就可以使用<code>Git Bash</code>来代替<code>cmd</code>了</p><h2 id="3-安装-text-Hexo"><a href="#3-安装-text-Hexo" class="headerlink" title="3. 安装 $\text{Hexo}$"></a>3. 安装 $\text{Hexo}$</h2><p>你需要在Git Bash中使用此命令安装Hexo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><br>然后使用 <code>hexo -v</code> 查看版本验证安装</p><p>之后初始化Hexo并且创建存储博客本地文件的文件夹<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog    //初始化</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><figcaption><span>处是你的博客本地文件夹的名字，写什么都可以</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">然后执行下面的命令</span><br><span class="line">```bash</span><br><span class="line">cd myblog   //进入这个myblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p><font color=Orange>注意这些命令只能一次输入一条。粘贴可在Git Bash窗口右键或者 ```Shift+Ins``` </font><p>因为自带 $\text{Landscape}$ 主题，因此这个时候就可看到你的博客了！</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fupload-images.jianshu.io%2Fupload_images%2F15934130-2f1f347b172a7107.jpg%3FimageMogr2%2Fauto-orient%2Fstrip%257CimageView2%2F2%2Fw%2F1240&amp;refer=http%3A%2F%2Fupload-images.jianshu.io&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1631158843&amp;t=34a22477a057a0c3041d578f5f847012" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate   //可以缩写成 hexo g</span><br><span class="line">hexo server     //可以缩写成 hexo s</span><br></pre></td></tr></table></figure><p>说一个小诀窍：你可以<code>hexo g &amp;&amp; hexo s</code>，一步到位</p><h2 id="4-创建-text-GitHub-个人仓库"><a href="#4-创建-text-GitHub-个人仓库" class="headerlink" title="4. 创建 $\text{GitHub}$个人仓库"></a>4. 创建 $\text{GitHub}$个人仓库</h2><p>登录你的GitHub账号，创建一个新的仓库（没有账号的、不会创建的请自行BFS）</p><p><strong>仓库名创建为 <code>你的用户名.github.io</code>，不然无法识别</strong></p><p><img src="https://i.bmp.ovh/imgs/2021/08/6c7ddb3e975f29a8.png" alt=""></p><p>选择<code>Public</code></p><h2 id="5-生成-text-SSH-并添加到-text-GitHub"><a href="#5-生成-text-SSH-并添加到-text-GitHub" class="headerlink" title="5. 生成 $\text{SSH}$ 并添加到 $\text{GitHub}$"></a>5. 生成 $\text{SSH}$ 并添加到 $\text{GitHub}$</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name yourname</span><br><span class="line">git config --global user.email youremail</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>就是你的GitHub用户名，```youremail``` 是你的GitHub的注册邮箱。这是Github用来验证账户的。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以用下面的命令检查输入是否正确</span><br><span class="line">```bash</span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>接下来创建SSH，全部点回车就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C youremail</span><br></pre></td></tr></table></figure><p>你会在大概会在C:\Users\Administrator中找到这个文件夹，记事本打开<code>id_rsa.pub</code>。</p><p>ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的<code>setting</code>中，找到<code>SSH keys</code>的设置选项，点击<code>New SSH key</code><br>把你的<code>id_rsa.pub</code>里面的信息复制进去。</p><p>用下面的代码验证 (无需改动)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><h2 id="6-将-text-Hexo-部署到"><a href="#6-将-text-Hexo-部署到" class="headerlink" title="6. 将 $\text{Hexo}$ 部署到"></a>6. 将 $\text{Hexo}$ 部署到</h2><p>打开站点配置文件 <code>_config.yml</code>，翻到最后，修改<code>YourgithubName</code>为你的GitHub账户<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></p><p>安装 $\text{deploy-git}$ 部署工具以部署到 $\text{Github}$<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>然后执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean      //清除之前生成的东西 缩写为hexo cl</span><br><span class="line">hexo generate   //生成静态文章 缩写为hexo g</span><br><span class="line">hexo deploy     //部署 缩写为hexo d</span><br></pre></td></tr></table></figure></p><p>另外说一下，<strong>生成和部署</strong>可以合为 <code>hexo g -d</code> 。</p><p>现在，你可以打开 <code>source\_posts</code>，在里面创建<code>Markdown</code>文件，可以在里面写文章了！</p><hr><h1 id="第三部分：-text-Hexo-基本操作"><a href="#第三部分：-text-Hexo-基本操作" class="headerlink" title="第三部分： $\text{Hexo}$ 基本操作"></a>第三部分： $\text{Hexo}$ 基本操作</h1><h2 id="1-设置网站的基本框架"><a href="#1-设置网站的基本框架" class="headerlink" title="1. 设置网站的基本框架"></a>1. 设置网站的基本框架</h2><div class="table-container"><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">描述</th><th style="text-align:center">注释</th></tr></thead><tbody><tr><td style="text-align:center"><code>title</code></td><td style="text-align:center">网站标题</td></tr><tr><td style="text-align:center"><code>subtitle</code></td><td style="text-align:center">网站副标题</td></tr><tr><td style="text-align:center"><code>description</code></td><td style="text-align:center">网站描述</td></tr><tr><td style="text-align:center"><code>author</code></td><td style="text-align:center">作者</td></tr><tr><td style="text-align:center"><code>language</code></td><td style="text-align:center">语言</td></tr><tr><td style="text-align:center"><code>timezone</code></td><td style="text-align:center">时区</td><td style="text-align:center">Asia/Shanghai</td></tr><tr><td style="text-align:center"><code>url</code></td><td style="text-align:center">网址</td><td style="text-align:center">改成你的网站域名</td></tr><tr><td style="text-align:center"><code>root</code></td><td style="text-align:center">网站根目录</td><td style="text-align:center">不用修改</td></tr><tr><td style="text-align:center"><code>permalink</code></td><td style="text-align:center">文章的<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a>格式</td><td style="text-align:center">不建议使用默认格式</td></tr><tr><td style="text-align:center"><code>permalink_defaults</code></td><td style="text-align:center">永久链接中各部分的默认值</td></tr></tbody></table></div><h2 id="2-Page（创建新页面）"><a href="#2-Page（创建新页面）" class="headerlink" title="2. Page（创建新页面）"></a>2. Page（创建新页面）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 页面名称</span><br></pre></td></tr></table></figure><p>系统会自动给你在博客根目录下的 <code>source</code> 文件夹中生成一个新的文件夹，里面有一个 <code>index.md</code>，页面的编辑操作在此文件中进行。</p><h2 id="3-Draft（草稿）"><a href="#3-Draft（草稿）" class="headerlink" title="3. Draft（草稿）"></a>3. Draft（草稿）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></table></figure><p>这样会在 <code>source/_draft</code> 中新建一个 <code>newpage.md</code> 文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><br>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到<code>post</code>中，下面的代码就会自动把<code>newpage.md</code>发送到<code>post</code>中。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></table></figure></p><h1 id="第四部分：-text-Hexo-优化"><a href="#第四部分：-text-Hexo-优化" class="headerlink" title="第四部分： $\text{Hexo}$ 优化"></a>第四部分： $\text{Hexo}$ 优化</h1><h2 id="1-更换主题"><a href="#1-更换主题" class="headerlink" title="1. 更换主题"></a>1. 更换主题</h2><p>在这里，窝推荐两款主题</p><ul><li>$\text{Shana}$ <strong>非常优秀的二次元主题</strong>。缺点是集成的功能比较少，需要自己读代码写文件（开发者似乎大学毕业了，回issue回答比较慢），而且开发者的主要开发方向是PC端</li><li>$\text{NexT}$  <strong>非常优秀、功能极为强大、易于操作的主题</strong>。如果喜欢各种效果实现各种功能，选择这个会比较方便，移动端效果比较好</li></ul><p>由于我现在已经不用Shana主题了，所以用我正在用的NexT主题来说一下</p><p><a href="http://theme-next.iissnan.com/">NexT官方文档</a>  NexT是有中文文档的。参照官方文档即可</p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>有两种方法下载NexT：使用git克隆最新版本和下载稳定版本的压缩包(.zip)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><font color=red size=4>提前声明一下：```站点配置文件```是你博客根目录下的```_config.yml```文件，```主题配置文件```是next主题文件夹下的```_config.yml```文件</font><p>打开 <code>thmems\next</code>，找到 <code>站点配置文件 (_config.yml)</code>。搜索找到 <code>theme:</code> 字段，把后面的 <code>landscape</code> 改成 <code>next</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></p><p>执行 <code>hexo cl</code> 清除缓存。之后执行 <code>hexo s</code> 便可以在 <code>localhost:4000</code> 中看到博客的预览效果了</p><h3 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h3><p>请自行阅读<a href="http://theme-next.iissnan.com/">NexT官方文档</a></p><h2 id="2-添加-text-RSS-订阅功能"><a href="#2-添加-text-RSS-订阅功能" class="headerlink" title="2. 添加 $\text{RSS}$ 订阅功能"></a>2. 添加 $\text{RSS}$ 订阅功能</h2><p>可以参照我的<a href="https://ustinianx.com/2020/07/12/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0RSS%E8%AE%A2%E9%98%85%E5%8A%9F%E8%83%BD/">这篇文章</a></p><h3 id="安装-text-feed-插件"><a href="#安装-text-feed-插件" class="headerlink" title="安装$\text{feed}$插件"></a>安装$\text{feed}$插件</h3><p>$\text{Hexo}$博客有一个专门生成$\text{RSS xml}$文件的插件<code>hexo-generator-feed</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure></p><h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改<code>站点配置文件</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## RSS订阅</span></span><br><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><!-- ![](https://ae01.alicdn.com/kf/Uabb845f7d7694a81a9e8225c8611c92dZ.jpg) --><p>接下来直接执行<code>hexo g</code>就可以生成$\text{xml}$文件</p><h3 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h3><p>自行Google</p><p>推荐世界第一RSS阅读器 <a href="https://inoreader.en.softonic.com/"><code>inoreader</code></a></p><h2 id="3-绑定个人域名"><a href="#3-绑定个人域名" class="headerlink" title="3. 绑定个人域名"></a>3. 绑定个人域名</h2><h3 id="首先你需要有一个域名"><a href="#首先你需要有一个域名" class="headerlink" title="首先你需要有一个域名"></a>首先你需要有一个域名</h3><p>域名后缀看自己需求，<code>.com</code>比较贵，可以选择近年来比较火的<code>.top .xyz</code>之类的，这类的便宜，还有个性。第一年我用的<code>.com</code>，后来就换成<code>.icu</code>了</p><p>可以选择<br><a href="https://wanwang.aliyun.com/">万网</a><br>或者<br><a href="https://www.west.cn/">西部数码</a><br>之类的</p><h3 id="获取-text-IP-地址"><a href="#获取-text-IP-地址" class="headerlink" title="获取 $\text{IP}$ 地址"></a>获取 $\text{IP}$ 地址</h3><p>在此之前需要获取自己 GitHub 的二级域名的 IP 地址。Git Bash下ping自己博客的地址即可获得。</p><h3 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h3><p>在你购买网站的控制台中找到域名解析，将刚刚得到的 ip 地址填入后面的“对应值（或者叫记录值）”，选择A记录，其他不用动。<br>之后在主机名中分别填入 <code>www</code> 和 <code>@</code>。刷新一下，大概就成功了。</p><p><img src="https://i.bmp.ovh/imgs/2021/08/b866ca35e9eb33c6.png" alt=""></p><h3 id="text-GitHub-仓库的-text-custom-domain-绑定域名"><a href="#text-GitHub-仓库的-text-custom-domain-绑定域名" class="headerlink" title="$\text{GitHub}$ 仓库的 $\text{custom domain}$ 绑定域名"></a>$\text{GitHub}$ 仓库的 $\text{custom domain}$ 绑定域名</h3><p>进入仓库中， 点击<code>setting</code>往下滑 会看到<code>custom domain</code></p><p>随后将自己购买的域名填写进去（纯域名，不要加www之类的任何东西）</p><p><img src="https://i.bmp.ovh/imgs/2021/08/84912995173b1fb3.png" alt=""></p><h3 id="设置-text-CNAME"><a href="#设置-text-CNAME" class="headerlink" title="设置 $\text{CNAME}$"></a>设置 $\text{CNAME}$</h3><p>进入Hexo根目录下的 <code>source</code> 文件夹，添加一个CNAME。<font color=RED>注意不要添加任何后缀名！</font></p><p><img src="https://s1.ax1x.com/2020/08/07/ahwVQU.png" alt=""></p><p>在里面填入你的域名</p><p><img src="https://i.bmp.ovh/imgs/2021/08/a371e5b3ea311d99.png" alt=""></p><h2 id="4-国内外分流"><a href="#4-国内外分流" class="headerlink" title="4. 国内外分流"></a>4. 国内外分流</h2><p>但是吧，这一点我并不会做，正在研究，过段时间会补上的。</p><p>BFS吧</p><h2 id="5-text-SEO-优化"><a href="#5-text-SEO-优化" class="headerlink" title="5. $\text{SEO}$ 优化"></a>5. $\text{SEO}$ 优化</h2><p>首先需要让搜索引擎收录你的这个网站，别人才能搜索的到，那么这就需要SEO优化了</p><blockquote><p>SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”。SEO是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</p></blockquote><h3 id="百度SEO"><a href="#百度SEO" class="headerlink" title="百度SEO"></a>百度SEO</h3><p>登录 <a href="https://ziyuan.baidu.com/linksubmit/index">百度站长平台</a>，在站点管理中添加自己的网站。</p><p>验证方式选择 $\text{HTML}$标签 验证，我们需要获取的是红框内的这串代码</p><p><img src="https://s1.ax1x.com/2020/08/07/ahDIpt.png" alt=""></p><p>打开<code>站点配置文件</code>，添加以下两行，并把刚才的代码填在baidu那一行之后，注意与冒号之间要有空格。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">google_site_verification:</span> </span><br><span class="line"><span class="attr">baidu-site-verification:</span> </span><br></pre></td></tr></table></figure></p><h3 id="站点地图"><a href="#站点地图" class="headerlink" title="站点地图"></a>站点地图</h3><p>首先安装插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></p><p>在<code>站点配置文件</code>添加以下代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://wincer.icu/</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://wincer.icu/</span></span><br></pre></td></tr></table></figure><p>然后执行一下 <code>hexo cl &amp;&amp; hexo g</code>，在 <code>public</code> 中找到 <code>baidusitemap.xml</code> 和 <code>sitemap.xml</code>，用VSCode的查找和替换功能，把所有的 <code>http://yoursite.com/</code> 换成我们自己的域名。然后不需要<code>generate</code>，直接<code>deploy</code>就可以了。</p><h3 id="百度主动提交"><a href="#百度主动提交" class="headerlink" title="百度主动提交"></a>百度主动提交</h3><p>执行一下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><br>然后在<code>站点配置文件</code>中插入，填入你的<code>token</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu主动推送</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">5</span> <span class="comment">## 提交最新的五个链接</span></span><br><span class="line">  <span class="attr">host:</span>  <span class="comment">## 百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span>  <span class="comment">## 准入秘钥</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure><br>$\text{token}$ 是<code>主动推送（实时）</code>中的</p><p><img src="https://s1.ax1x.com/2020/08/07/ahgVln.png" alt=""></p><p>随后在<code>主题配置文件</code>中搜索找到 <code>baidu_push</code> 段落，将其改为<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>之后在 <code>themes\next\layout\_partials\head.swig</code> 中搜索 <code>baidu_site_verification</code><br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="operator">%</span> <span class="keyword">if</span> theme.baidu_site_verification <span class="operator">%</span>&#125;</span><br><span class="line">  <span class="operator">&lt;</span>meta name<span class="operator">=</span><span class="string">&quot;baidu-site-verification&quot;</span> content<span class="operator">=</span><span class="string">&quot;&#123;&#123; theme.qihu_site_verification &#125;&#125;&quot;</span> <span class="operator">/&gt;</span></span><br><span class="line">&#123;<span class="operator">%</span> endif <span class="operator">%</span>&#125;</span><br></pre></td></tr></table></figure><br>把 <code>content</code> 后面换成自己的token，<font color=RED>只需要刚才的token，括号和引号都不需要。</font></p><h3 id="Google-SEO"><a href="#Google-SEO" class="headerlink" title="Google SEO"></a>Google SEO</h3><p>需要小梯子</p><p>首先选择资源类型，一般选择网页前缀</p><p>$\text{Google}$会自动帮你完成验证。如果没有成功，那么按照指导验证。比如HTML验证，复制HTML代码中的部分内容，填到刚才 <code>themes\next\layout\_partials\head.swig</code> 中的相应字段中。</p><h2 id="6-更换字体"><a href="#6-更换字体" class="headerlink" title="6. 更换字体"></a>6. 更换字体</h2><p>在<code>主题配置文件</code>中，查找<code>font</code></p><p>修改为<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/e8aa61f7309555be.png" alt=""></p><p>随后打开<a href="https://fonts.google.com/?">Google Font</a>，挑选字体</p><p>然后可以自由设置lobal、title、heading这些不同区域的字体<br><img src="https://i.bmp.ovh/imgs/2021/08/340a546c9410e8f6.png" alt=""></p><h1 id="第五部分：-text-Hexo-功能"><a href="#第五部分：-text-Hexo-功能" class="headerlink" title="第五部分： $\text{Hexo}$ 功能"></a>第五部分： $\text{Hexo}$ 功能</h1><h2 id="1-添加音乐功能"><a href="#1-添加音乐功能" class="headerlink" title="1. 添加音乐功能"></a>1. 添加音乐功能</h2><h3 id="直接插入文章当中"><a href="#直接插入文章当中" class="headerlink" title="直接插入文章当中"></a>直接插入文章当中</h3><h4 id="text-iframe-标签"><a href="#text-iframe-标签" class="headerlink" title="$\text{iframe}$标签"></a>$\text{iframe}$标签</h4><p>相当的简单</p><p>先到网易云音乐中中搜出你想要的音乐，然后点击<strong>生成外链播放器</strong></p><p>所需要的所有代码都在这个框框内了</p><p><img src="https://i.bmp.ovh/imgs/2021/08/4dda7a307388b911.png" alt=""></p><p>然后把这个代码粘贴到你的文章的$\text{.md}$文件中，就可以显示了</p><p><img src="https://img-service.csdnimg.cn/img_convert/74fbf69d9a51d681dc4b7e3fbfe31880.png" alt=""></p><h3 id="text-JavaScript-标签"><a href="#text-JavaScript-标签" class="headerlink" title="$\text{JavaScript}$标签"></a>$\text{JavaScript}$标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.xiami.com/widget/player-single?uid=32329501&amp;sid=1776238762&amp;mode=js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="使用-text-Hexo-tag-Aplayer-插件"><a href="#使用-text-Hexo-tag-Aplayer-插件" class="headerlink" title="使用$\text{Hexo-tag-Aplayer}$插件"></a>使用$\text{Hexo-tag-Aplayer}$插件</h3><p>$\text{hexo-tag-aplayer}$是$\text{Aplayer}$在$\text{Hexo}$上的插件，其配置可以参考<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure><p>在文章的markdown文档里添加<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="operator">%</span> aplayer <span class="string">&quot;她的睫毛&quot;</span> <span class="string">&quot;周杰伦&quot;</span> <span class="string">&quot;http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3&quot;</span>  <span class="string">&quot;http://home.ustc.edu.cn/~mmmwhy/jay.jpg&quot;</span> <span class="string">&quot;autoplay=false&quot;</span> <span class="operator">%</span>&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://img-service.csdnimg.cn/img_convert/ab972faca09544bce0c902b4e7f4d9c5.png" alt=""></p><hr><p><strong>以上两种都只能实现单篇文章内的播放，下面这一种是将播放器部署在所有界面</strong></p><h3 id="主页音乐播放器"><a href="#主页音乐播放器" class="headerlink" title="主页音乐播放器"></a>主页音乐播放器</h3><p>可以控制是否自动播放（<del>自动播放移动端不支持</del>）</p><p>修改  <code>themes/next/layout/_macro/sidebar.swig</code>文件</p><p>添加播放器内容<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 音乐播放器 --&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if theme.background_music %&#125;</span><br><span class="line">        &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;&#123;&#123; theme.background_music &#125;&#125;&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>大概在这个位置<br><img src="https://i.bmp.ovh/imgs/2021/08/3a7327536258d31d.png" alt=""></p><p>在 <code>themes/next/_config.yml</code>主题配置文件中添加歌单地址配置</p><p><code>background_music: //music.163.com/outchain/player?type=0&amp;id=2120628564&amp;auto=1&amp;height=66</code><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background_music: </span><br></pre></td></tr></table></figure><br>如图所示填入歌曲的部分HTML代码</p><h3 id="添加歌单"><a href="#添加歌单" class="headerlink" title="添加歌单"></a>添加歌单</h3><p>创建歌单，复制代码<br><img src="https://img-service.csdnimg.cn/img_convert/2030c8d1caec3531c2e5f29fea22be8a.png" alt=""></p><p>把 <code>height=90</code>改成 <code>height=66</code></p><p>最后贴一张我的博客的效果图<br><img src="https://img-service.csdnimg.cn/img_convert/3fea7cbbcb44d39fc27c426ac1d090ba.png" alt=""></p><hr><h3 id="也可以单独的做一个歌单页面"><a href="#也可以单独的做一个歌单页面" class="headerlink" title="也可以单独的做一个歌单页面"></a>也可以单独的做一个歌单页面</h3><p>最新版的 $\text{hexo-tag-aplayer}$ 已经支持了$\text{MetingJS}$的使用，可以直接解析网络平台的歌曲，首先要在站点配置文件中开启 $\text{meting}$ 模式，添加以下代码在配置文件的最后：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></table></figure></p><p>复制歌单的链接，然后复制歌单的$\text{id}$，例如 <a href="https://music.163.com/playlist?id=523845661&amp;userid=46562117">https://music.163.com/playlist?id=523845661&amp;userid=46562117</a> ，这个歌单的id就是523845661，公司名可以是tencent、netease或是其他公司，下面给出一个例子，打开 /Hexo/source/playlist/index.md文件，输入：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="operator">%</span> meting <span class="string">&quot;7634442256&quot;</span> <span class="string">&quot;tencent&quot;</span> <span class="string">&quot;playlist&quot;</span> <span class="string">&quot;theme:#555&quot;</span> <span class="string">&quot;mutex:true&quot;</span> <span class="string">&quot;listmaxheight:340px&quot;</span> <span class="string">&quot;preload:auto&quot;</span> <span class="operator">%</span>&#125;</span><br></pre></td></tr></table></figure><br>这就是一个<a href="https://y.qq.com/n/m/detail/taoge/index.html?id=7634442256">$\text{QQ}$音乐</a>的歌单</p><p><strong>最终效果</strong><br><img src="https://i.bmp.ovh/imgs/2021/08/16537acd1ac46c85.png" alt="效果还是不错的"></p><h2 id="2-代码块一键复制"><a href="#2-代码块一键复制" class="headerlink" title="2. 代码块一键复制"></a>2. 代码块一键复制</h2><h3 id="1-新建代码复制模块文件"><a href="#1-新建代码复制模块文件" class="headerlink" title="1. 新建代码复制模块文件"></a>1. 新建代码复制模块文件</h3><p>在<code>/themes/next/layout/_third-party</code>下新建文件<code>copy-code.swig</code>，写入代码</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="operator">%</span> <span class="keyword">if</span> theme.codeblock.copy_button.enable <span class="operator">%</span>&#125;</span><br><span class="line">  <span class="operator">&lt;</span>style<span class="operator">&gt;</span></span><br><span class="line">    .copy<span class="operator">-</span>btn &#123;</span><br><span class="line">      display: inline<span class="operator">-</span>block;</span><br><span class="line">      padding: 6px 12px;</span><br><span class="line">      font<span class="operator">-</span>size: 13px;</span><br><span class="line">      font<span class="operator">-</span>weight: <span class="number">700</span>;</span><br><span class="line">      line<span class="operator">-</span>height: 20px;</span><br><span class="line">      color: #<span class="number">333</span>;</span><br><span class="line">      white<span class="operator">-</span>space: nowrap;</span><br><span class="line">      vertical<span class="operator">-</span>align: middle;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      background<span class="operator">-</span>color: #eee;</span><br><span class="line">      background<span class="operator">-</span>image: linear<span class="operator">-</span>gradient(#fcfcfc, #eee);</span><br><span class="line">      border: 1px solid #d5d5d5;</span><br><span class="line">      border<span class="operator">-</span>radius: 3px;</span><br><span class="line">      user<span class="operator">-</span>select: none;</span><br><span class="line">      outline: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight<span class="operator">-</span>wrap .copy<span class="operator">-</span>btn &#123;</span><br><span class="line">      transition: opacity .3s ease<span class="operator">-</span><span class="keyword">in</span><span class="operator">-</span>out;</span><br><span class="line">      opacity: <span class="number">0</span>;</span><br><span class="line">      padding: 2px 6px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 4px;</span><br><span class="line">      top: 8px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight<span class="operator">-</span>wrap:hover .copy<span class="operator">-</span>btn,</span><br><span class="line">    .highlight<span class="operator">-</span>wrap .copy<span class="operator">-</span>btn:focus &#123;</span><br><span class="line">      opacity: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight<span class="operator">-</span>wrap &#123;</span><br><span class="line">      position: relative;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="operator">&lt;/</span>style<span class="operator">&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="operator">&lt;</span>script<span class="operator">&gt;</span></span><br><span class="line">    $(&#x27;.highlight&#x27;).each(function (i, e) &#123;</span><br><span class="line">      <span class="keyword">var</span> <span class="variable">$wrap</span> <span class="operator">=</span> $(&#x27;<span class="operator">&lt;</span>div<span class="operator">&gt;</span>&#x27;).addClass(&#x27;highlight<span class="operator">-</span>wrap&#x27;)</span><br><span class="line">      $(e).after(<span class="variable">$wrap</span>)</span><br><span class="line">      <span class="variable">$wrap</span>.append($(&#x27;<span class="operator">&lt;</span>button<span class="operator">&gt;</span>&#x27;).addClass(&#x27;copy<span class="operator">-</span>btn&#x27;).append(&#x27;&#123;&#123;__(<span class="string">&quot;post.copy_button&quot;</span>)&#125;&#125;&#x27;).on(&#x27;click&#x27;, function (e) &#123;</span><br><span class="line">        <span class="keyword">var</span> code <span class="operator">=</span> $(this).parent().find(&#x27;.code&#x27;).find(&#x27;.line&#x27;).map(function (i, e) &#123;</span><br><span class="line">          <span class="keyword">return</span> $(e).text()</span><br><span class="line">        &#125;).toArray().join(&#x27;\n&#x27;)</span><br><span class="line">        <span class="keyword">var</span> ta <span class="operator">=</span> document.createElement(&#x27;textarea&#x27;)</span><br><span class="line">        document.body.appendChild(ta)</span><br><span class="line">        ta.style.position <span class="operator">=</span> &#x27;absolute&#x27;</span><br><span class="line">        ta.style.top <span class="operator">=</span> &#x27;0px&#x27;</span><br><span class="line">        ta.style.left <span class="operator">=</span> &#x27;0px&#x27;</span><br><span class="line">        ta.value <span class="operator">=</span> code</span><br><span class="line">        ta.select()</span><br><span class="line">        ta.focus()</span><br><span class="line">        <span class="keyword">var</span> result <span class="operator">=</span> document.execCommand(&#x27;copy&#x27;)</span><br><span class="line">        document.body.removeChild(ta)</span><br><span class="line">        &#123;<span class="operator">%</span> <span class="keyword">if</span> theme.codeblock.copy_button.show_result <span class="operator">%</span>&#125;</span><br><span class="line">          <span class="keyword">if</span>(result)$(this).text(&#x27;&#123;&#123;__(<span class="string">&quot;post.copy_success&quot;</span>)&#125;&#125;&#x27;)</span><br><span class="line">          <span class="keyword">else</span> $(this).text(&#x27;&#123;&#123;__(<span class="string">&quot;post.copy_failure&quot;</span>)&#125;&#125;&#x27;)</span><br><span class="line">        &#123;<span class="operator">%</span> endif <span class="operator">%</span>&#125;</span><br><span class="line">        $(this).blur()</span><br><span class="line">      &#125;)).on(&#x27;mouseleave&#x27;, function (e) &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$b</span> <span class="operator">=</span> $(this).find(&#x27;.copy<span class="operator">-</span>btn&#x27;)</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          <span class="variable">$b</span>.text(&#x27;&#123;&#123;__(<span class="string">&quot;post.copy_button&quot;</span>)&#125;&#125;&#x27;)</span><br><span class="line">        &#125;, <span class="number">300</span>)</span><br><span class="line">      &#125;).append(e)</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="operator">&lt;/</span>script<span class="operator">&gt;</span></span><br><span class="line">&#123;<span class="operator">%</span> endif <span class="operator">%</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="2-引用文件"><a href="#2-引用文件" class="headerlink" title="2. 引用文件"></a>2. 引用文件</h3><p>编辑<code>/themes/next/layout/_layout.swig</code>文件，在文件末尾<code>&lt;/body&gt;</code>前添加一行代码<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="operator">%</span> include &#x27;_third<span class="operator">-</span>party<span class="operator">/</span>copy<span class="operator">-</span>code.swig&#x27; <span class="operator">%</span>&#125;</span><br></pre></td></tr></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/f1943d6895088094.png" alt=""></p><h3 id="3-添加按钮上显示的语言"><a href="#3-添加按钮上显示的语言" class="headerlink" title="3. 添加按钮上显示的语言"></a>3. 添加按钮上显示的语言</h3><p>在<code>/themes/next/languages/zh-Hans.yml</code>文件的<strong>post</strong>板块中添加下列代码<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">copy_button:</span> <span class="string">复制</span></span><br><span class="line"><span class="attr">copy_success:</span> <span class="string">复制成功</span></span><br><span class="line"><span class="attr">copy_failure:</span> <span class="string">复制失败</span></span><br></pre></td></tr></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/a102306bc2fe1b19.png" alt=""></p><h3 id="4-在主题配置文件中添加开关"><a href="#4-在主题配置文件中添加开关" class="headerlink" title="4. 在主题配置文件中添加开关"></a>4. 在主题配置文件中添加开关</h3><p>需要注意的是，NexT version 5.1.4是没有codeblock选项的，需要在<code>主题配置文件</code>中添加<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">border_radius:</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result·</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/b548e9932c0dc87e.png" alt=""></p><h2 id="3-添加顶部加载条"><a href="#3-添加顶部加载条" class="headerlink" title="3. 添加顶部加载条"></a>3. 添加顶部加载条</h2><p>配置<code>主题配置文件_config.yml</code>，将<code>pace: false</code>改为<code>pace: true</code>即可</p><p>有多种样式可供选择<br><img src="https://i.bmp.ovh/imgs/2021/08/46f82ef18b29ce20.png" alt=""></p><h2 id="4-修改底部标签"><a href="#4-修改底部标签" class="headerlink" title="4. 修改底部标签"></a>4. 修改底部标签</h2><p>打开<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;</code>，将 <code>#</code> 换成<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>i <span class="class"><span class="keyword">class</span>=&quot;<span class="title">fa</span> <span class="title">fa</span>-<span class="title">tag</span>&quot;&gt;&lt;/<span class="title">i</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/4efceeb912d4b27f.png" alt=""></p><h2 id="5-文本提示"><a href="#5-文本提示" class="headerlink" title="5. 文本提示"></a>5. 文本提示</h2><p>插件为 <code>hexo-tag-hint</code>，实例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">穹妹经常带着&#123;% hint &#x27;黑色的兔子布偶&#x27; &#x27;小时候悠送的&#x27; %&#125;，在悠的面前常常抱怨且任性</span><br></pre></td></tr></table></figure><p>效果</p><p><strong>穹妹经常带着<span class="hint--info hint--rounded hint--top" data-hint="小时候悠送的" ontouchstart>黑色的兔子布偶</span>，在悠的面前常常抱怨且任性</strong></p><p>注意字符串中有单引号的时候<strong>加反斜线转义</strong></p><center><font size=5 color=Orange>未完待续</font></center>]]></content>
    
    
    <summary type="html">&lt;p&gt;$\text{Hexo}$ 是一个优秀的轻量级博客系统，本身可以兼容各种功能&lt;/p&gt;
&lt;p&gt;而 $\text{NexT}$，则是一个集成有非常多功能、并且兼容性极好&lt;/p&gt;
&lt;p&gt;因此本文选择了 $\text{Hexo+NexT}$ 的搭配&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://wincer.icu/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://wincer.icu/tags/Hexo/"/>
    
  </entry>
  
</feed>
