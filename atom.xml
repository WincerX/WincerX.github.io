<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wincer&#39;s blog</title>
  
  <subtitle>夜空のように、悲しい世界を優しく包みます</subtitle>
  <link href="https://wincer.space/atom.xml" rel="self"/>
  
  <link href="https://wincer.space/"/>
  <updated>2022-04-02T14:51:47.656Z</updated>
  <id>https://wincer.space/</id>
  
  <author>
    <name>Wincer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>text</title>
    <link href="https://wincer.space/p/text.html"/>
    <id>https://wincer.space/p/text.html</id>
    <published>2022-04-02T14:51:19.009Z</published>
    <updated>2022-04-02T14:51:47.656Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><span class="github-emoji"><span>✋</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/270b.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;link rel=&quot;st</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021年度总结</title>
    <link href="https://wincer.space/p/2021-Annual-Summary.html"/>
    <id>https://wincer.space/p/2021-Annual-Summary.html</id>
    <published>2021-12-31T13:23:59.000Z</published>
    <updated>2022-04-01T23:28:44.970Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="2021最后一天啦，就好好的告个别吧"><a href="#2021最后一天啦，就好好的告个别吧" class="headerlink" title=" 2021最后一天啦，就好好的告个别吧 "></a><p></p><center> 2021最后一天啦，就好好的告个别吧 </center><p></p></h2><p>我们在每一个年末的尾巴许下愿望，却很少在每一次挥手总结过去。回想这一年，时光如白驹转瞬即逝。感觉自己似乎什么也没做，但又感觉这一年过得还挺忙。我在这一年里得到，我在这一年里失去。我在这一年里惶惶不可终日，日复一日，终是昨日；我在这一年里不断期待明日，昨日今日，都不如明日。细细想来，2021年到底颇为充实，也很有激情。正如知乎er木寸上春树所言，生活就像Weierstrass函数。正是该函数内在的曲折，才使得它图像的维度奇迹般地突破了单调的二维，呈现出不一样的精彩。同样，我们如果经历了不平凡的崎岖和坎坷，回头来看，就会看到一个比别人更辉煌的人生轨迹，这不正是生命的精彩之处吗？</p><p>期待一下新的一年吧。想做的事很多啊，希望每一件都能达成。过去的一年里似乎太过意志消沉了，果然还是要换种心态才好。从来没有白白流逝的时光，就像从来没有易得的欢乐。凡为过往，皆为序章，愿我愿所得皆所愿，所遇皆所求。</p><p>我的2021，终究是过去了，就让来年的春风吹断未了的念想吧</p><hr><p>各位新年快乐，愿各位砥砺前行</p><p>共勉</p><p align="right">2021.12.31 23:41:51</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;link rel=&quot;st</summary>
      
    
    
    
    <category term="杂谈" scheme="https://wincer.space/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="https://wincer.space/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wincer.space/p/Hello,World!.html"/>
    <id>https://wincer.space/p/Hello,World!.html</id>
    <published>2021-12-15T14:11:00.334Z</published>
    <updated>2022-04-02T15:15:45.534Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Welcome-to-Wincer-s-Blog"><a href="#Welcome-to-Wincer-s-Blog" class="headerlink" title=" Welcome to Wincer's Blog!"></a><p></p><center> Welcome to Wincer's Blog!</center><p></p></h1><p>从2020年疫情以来，对于这个博客我经历了各种思考和尝试。好的服务器、云空间太贵，低价的 VPS 和云空间不是速度慢就是限并发限 Idle，自己现在用的服务器也另有他用；尝试过WordPress和自行开发主题，但一是没有那么多精力自己写文件，二是对于很多语言还不懂……最后，我决定将这个朴实无华的小站放在了 Github 上。自建站以来，尝试过顺眼的主题，但配置太麻烦，功能不够齐全，可用性达不到要求，很多东西不兼容或是实现起来比较困难等等</p><p>自从我去年3月份的第一次尝试以来，备考、升学……等等这些乱七八糟的事儿，一直处于一个比较繁忙的状态。同时我也算是处在人生的十字路口，思路和心态比较凌乱，一直没有顾上维护这个小站。<span class="hint--info hint--rounded hint--top" data-hint="2021/08/19" ontouchstart="">今天</span>我再次重置了这个博客，尽管当时的许多设置和文章业已丢失，但总归是再次布置妥当了</p><p>最近一段时间会尽力把之前想写的、丢失的博文补上。重开这个博客的另一个目的就是希望自己能总结、记录一些东西，顺便给现在有些失落的自己一个释放的空间</p><p>顺便说一下，由于时间有限等多种因素，博文可能会写的很简略。如果您有幸阅读某一篇博文但却未能完全理解的话，充分利用搜索引擎和评论区可以事半功倍</p><p>特别说明：文章在编写过程中将暂时关闭评论功能。如您发现未完成的文章中包含的错误，请用右下角的DaoVoice联络器或者左侧电邮与我联系，谢谢</p><p>写在最后最后：</p><h1 id="欢迎访问！您的支持是我最大的动力"><a href="#欢迎访问！您的支持是我最大的动力" class="headerlink" title="欢迎访问！您的支持是我最大的动力"></a><center>欢迎访问！您的支持是我最大的动力</center></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;link rel=&quot;st</summary>
      
    
    
    
    <category term="杂谈" scheme="https://wincer.space/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="https://wincer.space/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>【转载】我努力的开始，是从学渣体育生到化学竞赛省三</title>
    <link href="https://wincer.space/p/sports-student-to-chemistry-competition.html"/>
    <id>https://wincer.space/p/sports-student-to-chemistry-competition.html</id>
    <published>2021-08-21T02:27:09.000Z</published>
    <updated>2021-08-21T06:08:10.552Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>人与人之间的差异，有时比人与猿之间的差别还要大。我本是一个渣的不能再渣的学渣，曾经我与化学竞赛的距离，就像元素周期表右上角与左下角一样，遥不可及……</p><span id="more"></span><p>初中时，我是一个长跑的体育生，曾经获得校运会第1名，市运会第5名。本来我正常的人生轨迹应该是通过特招进入高中，再通过特长生招生进入某些普通的大学。</p><p>在中考的前六个月，我在体育道路上的领路人、我的恩师、我亲爱的学长，在高中时由于运动训练过度不幸猝死。受此影响，我临时起意，决定放弃体育的道路，再努力一把，通过文化课考入高中。</p><p>后来我如愿以偿进入了我们这个小城市最普通的一所非重点高中。我还是没有改掉体育生的野性和对学习的无视与懒惰，在高中里无心学习，考试成绩也常常是年级倒数，整日在操场闲逛，听歌看电影，闲云野鹤。我的课桌上破旧的课本与零食袋子互相重叠，就像是高价层的原子轨道一样，令人眼花缭乱。</p><p>那时候侥幸获得进入普通高中机会的我早已笃定，高三时通过单招考试进入一所还不错的职业院校，继续混日子。由于我的父亲是小县城里另一所非重点中学的校长，老师也不能拿我怎样，又害怕我天天惹事。后来我们学校校长决定采用招安的办法，给了我一个级部主任助理加校长助理的所谓职位，给了我一些权限比较高的职责：让我去管理学生档案，学生纪律，老师考勤以及后来影响我一生的竞赛生管理。</p><p>慢慢地，远离学习的我，竟然在这种事情上干的还不错，能够熟练使用各种办公软件，甚至在工作之余和办公室里的其他老师聊得风生水起，就像是那些老师那些领导真正的同事一样。那时的状态就像是一种不易收集的有机物，被做成了有机盐老老实实地结晶。</p><p>我的办公室，正好就在尖子班学生自习室的对面，那所自习室正是我为某些比较活泼的尖子班学生争取来的，让他们再晚自习时可以去讨论一些题目，而不会被管纪律的老师所打扰。尽管有时他们也会偷偷玩手机谈恋爱，但不得不承认人与人之间的差距确实很大，即使他们在自习室里闹翻天，学习成绩照样也在级部数一数二。当然我们高中也很普通，他们也远远没有达到清北天才的地步。我跟他们关系也比较好，他们有时会偷偷溜进我的办公室给手机充电，和我聊一些老师的八卦，听我讲体育生的故事。</p><p>那时，自主招生方兴未艾，门槛也比现在低很多很多，我们学校虽然极其普通，但每年都能在五大学科当中各出一个省三，有时甚至会有一个省二。</p><p>高二寒假，又到了竞赛生开始报名学习的时侯，我们按照每年省里分配的名额，招一些有志于竞赛的同学进行培训，但那年的化学竞赛学生并没有招满。由于名额确实有空缺，再加上某些竞赛生同学的鼓励。我就稀里糊涂把我的名字也加进了培训的名单当中，因为空闲确实是浪费名额。级部主任对此也并没有说什么。</p><p>在省会培训时，我看不懂艰难晦涩的祖德，听不懂玄之又玄的人名反应，跟不上一日千里的讲课速度。手里拿着的仅仅只是几本翻烂的高中课本。当时不知怎的，我突然决定要好好干这一件事，也许是突然开窍，也许是出于对自然科学的天生敬畏。培训的那几天，我以惊人的速度看完了高中化学大多数知识。回家后我找人借了几套高考理综卷。其中满分100的化学部分，我竟然都能做到70分以上。这对于我来说是完全不敢想象的。因为在此之前的高中生活我甚至没有考过一场完整的考试。</p><p>父亲对此将信将疑，他还是给了我很多钱，让我去买竞赛书自己看，他说就当是支持我的爱好了……寒假开学后，级部主任面对着一个从来不学习但如今却开始学习大学内容的学渣，脸上五味陈杂.</p><p>那时候没有什么有机化学成环秘籍，化学竞赛试题解析也只是出到第二版，质心竞赛也只默默无闻的刚起步的小机构。我甚至不敢回忆刚开始学习的狼狈，或许那种难度就像是宇宙大爆炸开始，从一个奇点演化成如今的宇宙一样复杂吧，我先看完了浙大优学的几本培优教程，然后又开始看祖德、普无、普化……我对化学的了解也深了许多，又学习了许多优秀化学家在建国之初建设祖国的先进事迹。我开始忘了高中学习，逐渐认同自己是竞赛生了，有时会面对着餐桌上的鱼，想起前些年生物竞赛决赛解剖鱼的梗。</p><p>5月中旬校级预赛开始了，我开始了高中里为数不多的没有睡觉的考试，早早地做完题目交了卷。后来过了一周左右，我正在教室里上课睡觉，口水流的沾满了袖子，化学老师一改平时对我的不管不顾，将我叫了起来，让我去办公室。原来我是全校唯一一个预赛成绩及格的学生。我有些不信，甚至是怀疑父亲偷偷找了关系，就让老师拿出其他竞赛生的试卷与我的对比，竟然真的没有比我高的！由于我平时在办公室学习的场景已经被级部主任记了下来，老师们也并没有怀疑我作弊，我也确实没有作弊。而那间自习室的学霸们开始主动与我讨论学习上的问题，我才真正开始感觉到自己似乎慢慢成为他们的一员。</p><p>接下来的暑假，我开始学习有机化学邢大本，也看了许多网课，感觉自己对化学的理解更深了。</p><p><img src="https://s3.bmp.ovh/imgs/2021/08/752431c099edcbae.jpg" alt=""><br>那时看过的部分竞赛书</p><p>9月1日我和带队老师还有其他竞赛同学一起去省城参加初赛，那天晚上我略微有些发烧，睡得很迷糊，梦见自己初中时和人比赛长跑，又梦见各种分子原子轨道，变化莫测。</p><p>9月2日参加考试时，我发现省会的学校与我们小县城相比确实有很多不同，桌椅坐起来更舒服，学校环境也比我们高中好很多。我心中很是感慨，想到自己学生生涯竟有大半在混日子，不禁有些后悔。又暗暗质问自己以后是否真的甘于平凡，是否真的甘心一辈子只是待在那个小县城，不出去长长见识。</p><p>我只学习了有机和无机，因此就抛弃了所有计算题。我做出来的题并不多，但总感觉做出来的题是那么顺理成章，就像是一个个分子小人在向我招手，三小时的时间，我竟然就像以前长跑一样，不紧不慢的跑了下来。</p><p>10月中下旬成绩出来了。并没有出乎我的意料，我获得了初赛三等奖。并且是那年全校唯一一个化学竞赛初赛奖。这是意料之外，却又是情理之中，我们学校每年必备的省三落在了一个学渣手中。</p><p>这或许对大佬来说，只是学习其他科目两三天的脑力劳动副产物，或许只是一张叠飞机的纸，但这对我来说却是努力的开始。</p><p>我突然真的好想努力一把看看。我决定了，要用剩下不足半年的时间考上本科。<br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">             高二蓝校服</span><br><span class="line"></span><br><span class="line">去年复去年，高一是当年。</span><br><span class="line"></span><br><span class="line">高二有学姐，校服双袖蓝。</span><br><span class="line"></span><br><span class="line">其言称我意，文采浩无边。</span><br><span class="line"></span><br><span class="line">翩翩亦袅袅，玉立如春烟。</span><br><span class="line"></span><br><span class="line">经年复经年，高三是今年。</span><br><span class="line"></span><br><span class="line">高二有学妹，校服依旧蓝。</span><br><span class="line"></span><br><span class="line">邀我折杨柳，嗅梅来相见。</span><br><span class="line"></span><br><span class="line">冉冉留倩影，言笑何绵绵！</span><br><span class="line"></span><br><span class="line">匆匆如秋雁，急景凋我颜。</span><br><span class="line"></span><br><span class="line">岂敢表我意，三年身犹单。</span><br><span class="line"></span><br><span class="line">信假我一年，何至此身鳏？</span><br></pre></td></tr></tbody></table></figure><p></p><p>这是我在距离高考还有两个月时写的感慨时间流逝飞快的诗。</p><p>那年自主招生政策收紧了许多，不过我知道，我本来也不能享受到自主招生的政策，一个竞赛所带给我的也远远不止是降分那么简单，后来上了大学，我才发现，竞赛确实对我这一生有重大影响。</p><p>第二年6月下旬，高考成绩出来的那个下午，我正在学校微机室里帮助两位副校长收集各个班主任汇总来的成绩，但我始终不敢查自己的。最终我下定决心，两只颤抖的手互相搀扶着输入了身份证号考号密码，成绩出来了，周围是一阵欢呼。我考了一个足够上公办二本的成绩，这对于我平时的表现是难以置信的。是的，这确实是我半年努力的结果，虽然比不上真正的学霸大佬，但这毕竟是我努力的开始。</p><p>二本学校与双一流学校的差距是无法想象的，绝大多数同学菜的离谱，也不可能在大学里完全接受一个新的知识和新的概念，但由于竞赛的基础，我并不是这样的。</p><p>进入大学后，我有幸能够在庸庸碌碌的众人中找到了一位极其上进的女生，作为我的女朋友。由于化学竞赛省级三等奖的加持，我被老师邀请进入了实验室，研究方向是不对称合成。也沾老师的光发了一篇SCI文章，也参加了一些大学生比赛，获得了还不错的奖。虽然现在网络上唱衰生化环材的论调盛行，我对自己的前途仍然也十分迷茫，但每当放假回家，捧起那张黄色的初赛三等奖证书。我都会热泪盈眶，某种意义上，这虽然轻于鸿毛，但却是一个人干事创业的开始……</p><hr><blockquote><p>转载自 <a href="https://forum.eduzhixin.com/discuss-detail/3761?subjectType=3">质心论坛 - 我努力的开始，是从学渣体育生到化学竞赛省三 (作者：搞竞赛的体育生)</a></p><p><a href="https://forum.eduzhixin.com/discuss-detail/3761?subjectType=3">https://forum.eduzhixin.com/discuss-detail/3761?subjectType=3</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;人与人之间的差异，有时比人与猿之间的差别还要大。我本是一个渣的不能再渣的学渣，曾经我与化学竞赛的距离，就像元素周期表右上角与左下角一样，遥不可及……&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈" scheme="https://wincer.space/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="https://wincer.space/tags/%E6%9D%82%E8%B0%88/"/>
    
    <category term="转载" scheme="https://wincer.space/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>珂朵莉树学习笔记</title>
    <link href="https://wincer.space/p/ODT.html"/>
    <id>https://wincer.space/p/ODT.html</id>
    <published>2021-08-13T10:31:23.000Z</published>
    <updated>2021-08-19T13:16:31.498Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>珂朵莉树（$\text{ODT}$），即$\text{Old Driver Tree}$（老司机树），是 $\text{lxl}$ 大佬创造出的一种<del>像珂朵莉挥剑一样暴力的</del>暴力算法，吊打线段树，暴踩标算，<del>迅速AK IOI</del></p><p>至于我学习的原因，一是它作为一种非常牛逼的暴力算法，甚至可以$\text{AC}$某些题；二是出于信仰，据不可靠研究表明，研究珂学对于OIer帮助极大</p><span id="more"></span><hr><p>总结一下，珂朵莉树分为4个部分</p><ul><li>构造</li><li>初始化</li><li>Split（分裂）</li><li>推平</li></ul><hr><h1 id="珂朵莉树是什么"><a href="#珂朵莉树是什么" class="headerlink" title="珂朵莉树是什么"></a>珂朵莉树是什么</h1><p>珂朵莉树，又称 $\text{Old Driver Tree(ODT)}$（老司机树）</p><p>由一名用户名为 $\text{Old Driver}$ 的CF用户在$\text{CF896C}$上首次使用，此人就是为你谷著名神犇、毒瘤出题者、<del>暴政</del>管理员 <font color="DarkViolet"> $\text{lxl (noip)}$ </font></p><p>是一种基于 $\text{std::set}$ 的暴力数据结构</p><p><img src="https://img-service.csdnimg.cn/img_convert/65e2372d0cf6a0a465b9360ead71867c.png" alt=""></p><h1 id="珂朵莉树的使用"><a href="#珂朵莉树的使用" class="headerlink" title="珂朵莉树的使用"></a>珂朵莉树的使用</h1><p>在数据随机的情况下使用，使一整段区间内的东西变得一样</p><h1 id="珂朵莉树的构造"><a href="#珂朵莉树的构造" class="headerlink" title="珂朵莉树的构造"></a>珂朵莉树的构造</h1><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line">set&lt;Node&gt; s;</span><br></pre></td></tr></tbody></table></figure><p>这是一个没有初始化的珂朵莉树</p><h1 id="珂朵莉树的初始化"><a href="#珂朵莉树的初始化" class="headerlink" title="珂朵莉树的初始化"></a>珂朵莉树的初始化</h1><p>一般来说，我们通过给定数据，向其中不断插入区间长度为1的区间来完成初始化</p><p>For example: $\text{ CF896C }$</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> l, r;   <span class="comment">//范围</span></span><br><span class="line">    <span class="keyword">mutable</span> LL v;   <span class="comment">//数值</span></span><br><span class="line">    <span class="built_in">node</span>(<span class="keyword">int</span> L, <span class="keyword">int</span> R = <span class="number">-1</span>, LL V = <span class="number">0</span>) : <span class="built_in">l</span>(L), <span class="built_in">r</span>(R), <span class="built_in">v</span>(V) {}</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node &amp;o) <span class="keyword">const</span>   <span class="comment">//重载运算符</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> l &lt; o.l;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>表示 $\text{ l, r }$ 这一个区间中所有的数都是$\text{v}$</p><h2 id="读入"><a href="#读入" class="headerlink" title="读入"></a>读入</h2><p>开一个$\text{set}$存$\text{Node}$，$\text{Node}$根据输入而定</p><h1 id="珂朵莉树的宏定义"><a href="#珂朵莉树的宏定义" class="headerlink" title="珂朵莉树的宏定义"></a>珂朵莉树的宏定义</h1><p>更方便</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S_IT set<span class="meta-string">&lt;Node&gt;</span>::iterator <span class="comment">//S_IT = set_iterator</span></span></span><br></pre></td></tr></tbody></table></figure><h1 id="珂朵莉树的核心操作：-text-Split（分裂）"><a href="#珂朵莉树的核心操作：-text-Split（分裂）" class="headerlink" title="珂朵莉树的核心操作：$\text{Split（分裂）}$"></a>珂朵莉树的核心操作：$\text{Split（分裂）}$</h1><p>一个集合中，有一部分需要修改，而另一部分不需要修改，就把集合拆开，拆成两部分</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IT <span class="title">split</span><span class="params">(<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    IT it = s.<span class="built_in">lower_bound</span>(<span class="built_in">node</span>(pos));       <span class="comment">//找到首个不小于pos的set</span></span><br><span class="line">    <span class="keyword">if</span> (it != s.<span class="built_in">end</span>() &amp;&amp; it-&gt;l == pos)</span><br><span class="line">    {                                       <span class="comment">//无需，直接返回</span></span><br><span class="line">        <span class="keyword">return</span> it;</span><br><span class="line">    }</span><br><span class="line">    --it;                                   <span class="comment">//否则一定在前一个区间中</span></span><br><span class="line">    <span class="keyword">int</span> L = it-&gt;l, R = it-&gt;r;               <span class="comment">//【l,r】就是要分裂的区间</span></span><br><span class="line">    LL V = it-&gt;v;                           <span class="comment">//取出值</span></span><br><span class="line">    s.<span class="built_in">erase</span>(it);                            <span class="comment">//删除原集合</span></span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="built_in">node</span>(L, pos - <span class="number">1</span>, V));          <span class="comment">//构建前半段的新结合</span></span><br><span class="line">    <span class="keyword">return</span> s.<span class="built_in">insert</span>(<span class="built_in">node</span>(pos, R, V)).first; <span class="comment">//构建后半段的新集合并且返回地址</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="珂朵莉树的推平"><a href="#珂朵莉树的推平" class="headerlink" title="珂朵莉树的推平"></a>珂朵莉树的推平</h1><p>降低复杂度，接近 ${mLog_{n}}$</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">assign_val</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, LL val)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">assign_val</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, LL val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    IT itl = <span class="built_in">split</span>(r+<span class="number">1</span>), itr = <span class="built_in">split</span>(l); <span class="comment">//求出要被摊平区间的收尾地址</span></span><br><span class="line">    s.<span class="built_in">erase</span>(itl, itr);                     <span class="comment">//删除原集合</span></span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="built_in">node</span>(l, r, val));             <span class="comment">//添加新集合</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h1><h2 id="区间加"><a href="#区间加" class="headerlink" title="区间加"></a>区间加</h2><p>找到对应集合暴力加</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, LL val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    IT itl = <span class="built_in">split</span>(l), itr = <span class="built_in">split</span>(r + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (; itl != itr; ++itl)</span><br><span class="line">        itl-&gt;v += val;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="区间第-k-小"><a href="#区间第-k-小" class="headerlink" title="区间第$k$小"></a>区间第$k$小</h2><p>把元素取出，暴力排序，暴力查找第k小（乘上集合的个数）</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LL <span class="title">rank</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    vector&lt;pair&lt;LL, <span class="keyword">int</span>&gt;&gt; vp;</span><br><span class="line">    IT itl = <span class="built_in">split</span>(l), itr = <span class="built_in">split</span>(r + <span class="number">1</span>);</span><br><span class="line">    vp.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span> (; itl != itr; ++itl)</span><br><span class="line">        vp.<span class="built_in">push_back</span>(pair&lt;LL, <span class="keyword">int</span>&gt;(itl-&gt;v, itl-&gt;r - itl-&gt;l + <span class="number">1</span>));</span><br><span class="line">    <span class="built_in">sort</span>(vp.<span class="built_in">begin</span>(), vp.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;pair&lt;LL, <span class="keyword">int</span>&gt;&gt;::iterator it = vp.<span class="built_in">begin</span>(); it != vp.<span class="built_in">end</span>(); ++it)</span><br><span class="line">    {</span><br><span class="line">        k -= it-&gt;second;</span><br><span class="line">        <span class="keyword">if</span> (k &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> it-&gt;first;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="区间幂次和"><a href="#区间幂次和" class="headerlink" title="区间幂次和"></a>区间幂次和</h2><p>暴力找到元素，快速幂，加入答案（乘上集合的个数）</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LL <span class="title">pown</span><span class="params">(LL a, LL b, LL mod)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    LL ans = a % mod;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            res = res * ans % mod;</span><br><span class="line">        ans = ans * ans % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">sum</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ex, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    IT itl = <span class="built_in">split</span>(l), itr = <span class="built_in">split</span>(r + <span class="number">1</span>);</span><br><span class="line">    LL res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; itl != itr; ++itl)</span><br><span class="line">        res = (res + (LL)(itl-&gt;r - itl-&gt;l + <span class="number">1</span>) * <span class="built_in">pown</span>(itl-&gt;v, <span class="built_in">LL</span>(ex), <span class="built_in">LL</span>(mod))) % mod;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;珂朵莉树（$\text{ODT}$），即$\text{Old Driver Tree}$（老司机树），是 $\text{lxl}$ 大佬创造出的一种&lt;del&gt;像珂朵莉挥剑一样暴力的&lt;/del&gt;暴力算法，吊打线段树，暴踩标算，&lt;del&gt;迅速AK IOI&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;至于我学习的原因，一是它作为一种非常牛逼的暴力算法，甚至可以$\text{AC}$某些题；二是出于信仰，据不可靠研究表明，研究珂学对于OIer帮助极大&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="https://wincer.space/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="珂朵莉树" scheme="https://wincer.space/tags/%E7%8F%82%E6%9C%B5%E8%8E%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>VMWare虚拟机滥用指南</title>
    <link href="https://wincer.space/p/VMware-Install-Guide.html"/>
    <id>https://wincer.space/p/VMware-Install-Guide.html</id>
    <published>2021-08-07T09:22:53.000Z</published>
    <updated>2022-04-01T23:30:04.555Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>VMWare虚拟机功能强大，而且使用还是比较操作简单的，本文将介绍一般情况下VMWare虚拟机的使用方法</p><span id="more"></span><h1 id="0-下载VMware虚拟机"><a href="#0-下载VMware虚拟机" class="headerlink" title="0. 下载VMware虚拟机"></a>0. 下载VMware虚拟机</h1><p><a href="https://my.vmware.com/cn/web/vmware/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/15_0">你瞧瞧你瞧瞧，官网不就挺好吗？</a></p><p>一切下载方法<del>和<a href="http://47.94.110.29/KeyGen">破解方法</a></del>，<strong>Baidu First Search</strong> ,Pls.</p><h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h1><p>自行配置或BFS</p><h1 id="2-寻找镜像"><a href="#2-寻找镜像" class="headerlink" title="2. 寻找镜像"></a>2. 寻找镜像</h1><p><img src="https://s1.ax1x.com/2020/06/26/NDvM8I.png" alt=""><br>由于只找到了这一个未安装的，<del>新镜像懒得下载</del>，就玩这个吧</p><p>一般来说是一个.<strong>iso</strong>文件，但Mac OS虚拟机可能会使用.<strong>cdr</strong>文件或者.<strong>dmg</strong>文件</p><h1 id="3-新建虚拟机"><a href="#3-新建虚拟机" class="headerlink" title="3.新建虚拟机"></a>3.新建虚拟机</h1><p><img src="https://s1.ax1x.com/2020/06/26/NDv7ZD.png" alt=""></p><p>自定义不比典型复杂多少，典型也不比自定义复杂多少</p><p><img src="https://s1.ax1x.com/2020/06/26/NrpylR.png" alt=""></p><p>选择文件</p><p><img src="https://s1.ax1x.com/2020/06/26/NrpKw8.png" alt=""></p><p>自行设置</p><p>用户名和密码将会是Linux系统的用户名和密码</p><p>下面自行设置就好了</p><p><img src="https://s1.ax1x.com/2020/06/26/Nrpeyt.png" alt=""></p><p>与物理机的内存相关。比如蒟蒻的笔记本40GB内存，配给虚拟机的上限就是34.7</p><p>NOI Linux显然不需要这么大，4G其实就可以了<br><img src="https://s1.ax1x.com/2020/06/26/Nrp1YQ.png" alt=""></p><p>默认的SCSI就没有问题</p><p>这些都是硬盘接口</p><p>IDE最慢，NVMe最快</p><p>但是虚拟磁盘的速度如何就不好说了，没测过</p><p>Mac系统不能使用NVMe，会反复启动无法安装，原因不清楚</p><h1 id="4-打开虚拟机"><a href="#4-打开虚拟机" class="headerlink" title="4.打开虚拟机"></a>4.打开虚拟机</h1><p><img src="https://s1.ax1x.com/2020/06/26/NrpJln.png" alt="开机界面"><br>安装好之后，打开<br><img src="https://s1.ax1x.com/2020/06/26/NrVVSO.png" alt=""><br>一般来说，密码是<strong>123456</strong><br><img src="https://s1.ax1x.com/2020/06/26/NrVd7n.png" alt=""><br>这就是<strong>辣鸡NOI Linux</strong>的桌面，正常情况下你会发现你已经连上网了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;VMWare虚拟机功能强大，而且使用还是比较操作简单的，本文将介绍一般情况下VMWare虚拟机的使用方法&lt;/p&gt;</summary>
    
    
    
    <category term="System" scheme="https://wincer.space/categories/System/"/>
    
    
    <category term="VMWare" scheme="https://wincer.space/tags/VMWare/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建全面指南+基于NexT的优化</title>
    <link href="https://wincer.space/p/Hexo-Guide.html"/>
    <id>https://wincer.space/p/Hexo-Guide.html</id>
    <published>2021-08-06T01:51:34.000Z</published>
    <updated>2022-04-03T08:18:54.866Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>$\text{Hexo}$ 是一个优秀的轻量级博客系统，本身可以兼容各种功能</p><p>而 $\text{NexT}$，则是一个集成有非常多功能、并且兼容性极好</p><p>因此本文选择了 $\text{Hexo+NexT}$ 的搭配</p><span id="more"></span><h1 id="第一部分：-text-Hexo-简介"><a href="#第一部分：-text-Hexo-简介" class="headerlink" title="第一部分： $\text{Hexo}$ 简介"></a>第一部分： $\text{Hexo}$ 简介</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。可以进入hexo官网进行详细查看（毕竟官方文档很有用），因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h1 id="第二部分：-配置-text-Hexo"><a href="#第二部分：-配置-text-Hexo" class="headerlink" title="第二部分： 配置 $\text{Hexo}$"></a>第二部分： 配置 $\text{Hexo}$</h1><h2 id="1-安装-text-Git"><a href="#1-安装-text-Git" class="headerlink" title="1. 安装 $\text{Git}$"></a>1. 安装 $\text{Git}$</h2><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。</p><p>请到<a href="https://gitforwindows.org/"><strong>官网</strong></a>下载，然后打开 <strong>$\text{Git Bash}$命令行工具</strong></p><p>或者到<a href="https://npm.taobao.org/mirrors/git-for-windows/v2.33.0-rc1.windows.1/"><strong>国内镜像站</strong></a>，找到相应的最新的版本</p><p>安装完成后，使用 <code>git version</code> 验证版本</p><h2 id="2-安装-text-Node-JS"><a href="#2-安装-text-Node-JS" class="headerlink" title="2. 安装 $\text{Node.JS}$"></a>2. 安装 $\text{Node.JS}$</h2><p>Hexo基于<a href="https://nodejs.org/en/download/">Node.JS</a>，因此需要安装Node.Js和<code>npm</code>工具。</p><p><a href="https://npm.taobao.org/mirrors/python/3.9.6/"><strong>国内镜像站</strong></a>，找到对应的最新版本</p><p>选择 $\text{LTS}$ 版本即可</p><p>这样一来，就可以使用<code>Git Bash</code>来代替<code>cmd</code>了</p><h2 id="3-安装-text-Hexo"><a href="#3-安装-text-Hexo" class="headerlink" title="3. 安装 $\text{Hexo}$"></a>3. 安装 $\text{Hexo}$</h2><p>你需要在Git Bash中使用此命令安装Hexo<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure><br>然后使用 <code>hexo -v</code> 查看版本验证安装<p></p><p>之后初始化Hexo！<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init    </span><br></pre></td></tr></tbody></table></figure><p></p><p>注意<code>myblog</code> 处是你的博客本地文件夹的名字，写什么都可以</p><p>然后执行下面的命令</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog   //进入这个myblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure><font color="Orange">注意这些命令只能一次输入一条。粘贴可在Git Bash窗口右键或者 Shift+Ins </font><hr><h3 id="2021-08-02-UPD"><a href="#2021-08-02-UPD" class="headerlink" title="2021.08.02 UPD:"></a>2021.08.02 UPD:</h3><p>可以先建好文件夹然后右键Git Bash Here</p><hr><p>因为自带 $\text{Landscape}$ 主题，因此这个时候就可看到你的博客了！</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fupload-images.jianshu.io%2Fupload_images%2F15934130-2f1f347b172a7107.jpg%3FimageMogr2%2Fauto-orient%2Fstrip%257CimageView2%2F2%2Fw%2F1240&amp;refer=http%3A%2F%2Fupload-images.jianshu.io&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1631158843&amp;t=34a22477a057a0c3041d578f5f847012" alt=""></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate   //可以缩写成 hexo g</span><br><span class="line">hexo server     //可以缩写成 hexo s</span><br></pre></td></tr></tbody></table></figure><p>说一个小诀窍：你可以<code>hexo g &amp;&amp; hexo s</code>，一步到位</p><h2 id="4-创建-text-GitHub-个人仓库"><a href="#4-创建-text-GitHub-个人仓库" class="headerlink" title="4. 创建 $\text{GitHub}$个人仓库"></a>4. 创建 $\text{GitHub}$个人仓库</h2><p>登录你的GitHub账号，创建一个新的仓库（没有账号的、不会创建的请自行BFS）</p><p><strong>仓库名创建为 <code>你的用户名.github.io</code>，不然无法识别</strong></p><p><img src="https://i.bmp.ovh/imgs/2021/08/6c7ddb3e975f29a8.png" alt=""></p><p>选择<code>Public</code></p><h2 id="5-生成-text-SSH-并添加到-text-GitHub"><a href="#5-生成-text-SSH-并添加到-text-GitHub" class="headerlink" title="5. 生成 $\text{SSH}$ 并添加到 $\text{GitHub}$"></a>5. 生成 $\text{SSH}$ 并添加到 $\text{GitHub}$</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name yourname</span><br><span class="line">git config --global user.email youremail</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><figcaption><span>就是你的GitHub用户名，```youremail``` 是你的GitHub的注册邮箱。这是Github用来验证账户的。</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以用下面的命令检查输入是否正确</span><br><span class="line">```bash</span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></tbody></table></figure><p>接下来创建SSH，全部点回车就可以了</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C youremail</span><br></pre></td></tr></tbody></table></figure><p>你大概会在C:\Users\Administrator中找到这个文件夹，记事本打开<code>id_rsa.pub</code>。</p><p>ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的<code>setting</code>中，找到<code>SSH keys</code>的设置选项，点击<code>New SSH key</code><br>把你的<code>id_rsa.pub</code>里面的信息复制进去。</p><p>用下面的代码验证 (无需改动)<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="6-将-text-Hexo-部署到"><a href="#6-将-text-Hexo-部署到" class="headerlink" title="6. 将 $\text{Hexo}$ 部署到"></a>6. 将 $\text{Hexo}$ 部署到</h2><p>打开站点配置文件 <code>_config.yml</code>，翻到最后，修改<code>YourgithubName</code>为你的GitHub账户<br></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span>  <span class="comment"># 更新：现在GitHub默认为main，注意一下</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>安装 $\text{deploy-git}$ 部署工具以部署到 $\text{Github}$<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><p></p><p>然后执行<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean      //清除之前生成的东西 缩写为hexo cl</span><br><span class="line">hexo generate   //生成静态文章 缩写为hexo g</span><br><span class="line">hexo deploy     //部署 缩写为hexo d</span><br></pre></td></tr></tbody></table></figure><p></p><p>另外说一下，<strong>生成和部署</strong>可以合为 <code>hexo g -d</code> 。</p><p>现在，你可以打开 <code>source\_posts</code>，在里面创建<code>Markdown</code>文件，可以在里面写文章了！</p><hr><h1 id="第三部分：-text-Hexo-基本操作"><a href="#第三部分：-text-Hexo-基本操作" class="headerlink" title="第三部分： $\text{Hexo}$ 基本操作"></a>第三部分： $\text{Hexo}$ 基本操作</h1><h2 id="1-设置网站的基本框架"><a href="#1-设置网站的基本框架" class="headerlink" title="1. 设置网站的基本框架"></a>1. 设置网站的基本框架</h2><div class="table-container"><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">描述</th><th style="text-align:center">注释</th></tr></thead><tbody><tr><td style="text-align:center"><code>title</code></td><td style="text-align:center">网站标题</td></tr><tr><td style="text-align:center"><code>subtitle</code></td><td style="text-align:center">网站副标题</td></tr><tr><td style="text-align:center"><code>description</code></td><td style="text-align:center">网站描述</td></tr><tr><td style="text-align:center"><code>author</code></td><td style="text-align:center">作者</td></tr><tr><td style="text-align:center"><code>language</code></td><td style="text-align:center">语言</td></tr><tr><td style="text-align:center"><code>timezone</code></td><td style="text-align:center">时区</td><td style="text-align:center">Asia/Shanghai</td></tr><tr><td style="text-align:center"><code>url</code></td><td style="text-align:center">网址</td><td style="text-align:center">改成你的网站域名</td></tr><tr><td style="text-align:center"><code>root</code></td><td style="text-align:center">网站根目录</td><td style="text-align:center">不用修改</td></tr><tr><td style="text-align:center"><code>permalink</code></td><td style="text-align:center">文章的<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a>格式</td><td style="text-align:center">不建议使用默认格式</td></tr><tr><td style="text-align:center"><code>permalink_defaults</code></td><td style="text-align:center">永久链接中各部分的默认值</td></tr></tbody></table></div><h2 id="2-Page（创建新页面）"><a href="#2-Page（创建新页面）" class="headerlink" title="2. Page（创建新页面）"></a>2. Page（创建新页面）</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 页面名称</span><br></pre></td></tr></tbody></table></figure><p>系统会自动给你在博客根目录下的 <code>source</code> 文件夹中生成一个新的文件夹，里面有一个 <code>index.md</code>，页面的编辑操作在此文件中进行。</p><h2 id="3-Draft（草稿）"><a href="#3-Draft（草稿）" class="headerlink" title="3. Draft（草稿）"></a>3. Draft（草稿）</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></tbody></table></figure><p>这样会在 <code>source/_draft</code> 中新建一个 <code>newpage.md</code> 文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></tbody></table></figure><br>在本地端口中开启服务预览。<p></p><p>如果你的草稿文件写完了，想要发表到<code>post</code>中，下面的代码就会自动把<code>newpage.md</code>发送到<code>post</code>中。<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></tbody></table></figure><p></p><h1 id="第四部分：-text-Hexo-优化"><a href="#第四部分：-text-Hexo-优化" class="headerlink" title="第四部分： $\text{Hexo}$ 优化"></a>第四部分： $\text{Hexo}$ 优化</h1><h2 id="1-更换主题"><a href="#1-更换主题" class="headerlink" title="1. 更换主题"></a>1. 更换主题</h2><p>在这里，窝推荐两款主题</p><ul><li>$\text{Shana}$ <strong>非常优秀的二次元主题</strong>。缺点是集成的功能比较少，需要自己读代码写文件（开发者似乎大学毕业了，回issue回的比较慢），而且开发者的主要开发方向是PC端</li><li>$\text{NexT}$  <strong>非常优秀、功能极为强大、易于操作的主题</strong>。如果喜欢各种效果实现各种功能，选择这个会比较方便，移动端效果比较好</li></ul><p>由于现在我已经不用Shana主题了，所以用我正在用的NexT主题来说一下</p><p><a href="http://theme-next.iissnan.com/">NexT官方文档</a>  NexT是有中文文档的。参照官方文档即可</p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>有两种方法下载NexT：使用git克隆最新版本和下载稳定版本的压缩包(.zip)<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><font color="red" size="4">提前声明一下：```站点配置文件```是你博客根目录下的```_config.yml```文件，```主题配置文件```是next主题文件夹下的```_config.yml```文件</font><p>打开 <code>thmems\next</code>，找到 <code>站点配置文件 (_config.yml)</code>。搜索找到 <code>theme:</code> 字段，把后面的 <code>landscape</code> 改成 <code>next</code><br></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>执行 <code>hexo cl</code> 清除缓存。之后执行 <code>hexo s</code> 便可以在 <code>localhost:4000</code> 中看到博客的预览效果了</p><h3 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h3><p>请自行阅读<a href="http://theme-next.iissnan.com/">NexT官方文档</a></p><h2 id="2-添加-text-RSS-订阅功能"><a href="#2-添加-text-RSS-订阅功能" class="headerlink" title="2. 添加 $\text{RSS}$ 订阅功能"></a>2. 添加 $\text{RSS}$ 订阅功能</h2><p>可以参照我的<a href="https://ustinianx.com/2020/07/12/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0RSS%E8%AE%A2%E9%98%85%E5%8A%9F%E8%83%BD/">这篇文章</a></p><h3 id="安装-text-feed-插件"><a href="#安装-text-feed-插件" class="headerlink" title="安装$\text{feed}$插件"></a>安装$\text{feed}$插件</h3><p>$\text{Hexo}$博客有一个专门生成$\text{RSS xml}$文件的插件<code>hexo-generator-feed</code><br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></tbody></table></figure><p></p><h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改<code>站点配置文件</code></h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## RSS订阅</span></span><br><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></tbody></table></figure><!-- ![](https://ae01.alicdn.com/kf/Uabb845f7d7694a81a9e8225c8611c92dZ.jpg) --><p>接下来直接执行<code>hexo g</code>就可以生成$\text{xml}$文件</p><h3 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h3><p>自行Google</p><p>推荐世界第一RSS阅读器 <a href="https://inoreader.en.softonic.com/"><code>inoreader</code></a></p><h2 id="3-绑定个人域名"><a href="#3-绑定个人域名" class="headerlink" title="3. 绑定个人域名"></a>3. 绑定个人域名</h2><h3 id="首先你需要有一个域名"><a href="#首先你需要有一个域名" class="headerlink" title="首先你需要有一个域名"></a>首先你需要有一个域名</h3><p>域名后缀看自己需求，<code>.com</code>比较贵，可以选择近年来比较火的<code>.top .xyz</code>之类的，这类的便宜，还有个性。第一年我用的<code>.com</code>，后来就换成<code>.icu</code>了</p><p>可以选择<br><a href="https://wanwang.aliyun.com/">万网</a><br>或者<br><a href="https://www.west.cn/">西部数码</a><br>之类的</p><h3 id="获取-text-IP-地址"><a href="#获取-text-IP-地址" class="headerlink" title="获取 $\text{IP}$ 地址"></a>获取 $\text{IP}$ 地址</h3><p>在此之前需要获取自己 GitHub 的二级域名的 IP 地址。Git Bash下ping自己博客的地址即可获得。</p><h3 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h3><p>在你购买网站的控制台中找到域名解析，将刚刚得到的 ip 地址填入后面的“对应值（或者叫记录值）”，选择A记录，其他不用动。<br>之后在主机名中分别填入 <code>www</code> 和 <code>@</code>。刷新一下，大概就成功了。</p><p><img src="https://i.bmp.ovh/imgs/2021/08/b866ca35e9eb33c6.png" alt=""></p><h3 id="text-GitHub-仓库的-text-custom-domain-绑定域名"><a href="#text-GitHub-仓库的-text-custom-domain-绑定域名" class="headerlink" title="$\text{GitHub}$ 仓库的 $\text{custom domain}$ 绑定域名"></a>$\text{GitHub}$ 仓库的 $\text{custom domain}$ 绑定域名</h3><p>进入仓库中， 点击<code>setting</code>往下滑 会看到<code>custom domain</code></p><p>随后将自己购买的域名填写进去（纯域名，不要加www之类的任何东西）</p><p><img src="https://i.bmp.ovh/imgs/2021/08/84912995173b1fb3.png" alt=""></p><h3 id="设置-text-CNAME"><a href="#设置-text-CNAME" class="headerlink" title="设置 $\text{CNAME}$"></a>设置 $\text{CNAME}$</h3><p>进入Hexo根目录下的 <code>source</code> 文件夹，添加一个CNAME。<font color="RED">注意不要添加任何后缀名！</font></p><p><img src="https://s1.ax1x.com/2020/08/07/ahwVQU.png" alt=""></p><p>在里面填入你的域名</p><p><img src="https://i.bmp.ovh/imgs/2021/08/a371e5b3ea311d99.png" alt=""></p><h2 id="4-国内外分流"><a href="#4-国内外分流" class="headerlink" title="4. 国内外分流"></a>4. 国内外分流</h2><p>使用 Coding 或 Gitee 完成分流</p><h2 id="5-text-SEO-优化"><a href="#5-text-SEO-优化" class="headerlink" title="5. $\text{SEO}$ 优化"></a>5. $\text{SEO}$ 优化</h2><p>我们需要让搜索引擎收录这个网站，别人才能搜索到博客里的内容，那么这个时候我们就需要做一下SEO优化了</p><p>SEO优化还能使得</p><blockquote><p>SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”。SEO是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</p></blockquote><p>比较重要的是谷歌，百度，以及必应的优化，其他搜索引擎此处也就不细讲了</p><h3 id="站点地图"><a href="#站点地图" class="headerlink" title="站点地图"></a>站点地图</h3><p>首先安装插件<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></tbody></table></figure><p></p><p>在<code>站点配置文件</code>添加以下代码</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://wincer.space/</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://wincer.space/</span></span><br></pre></td></tr></tbody></table></figure><h3 id="百度SEO"><a href="#百度SEO" class="headerlink" title="百度SEO"></a>百度SEO</h3><p>登录 <a href="https://ziyuan.baidu.com/linksubmit/index">百度站长平台</a>，在站点管理中添加自己的网站。</p><p>可以选择最简单的 CNAME 验证。在域名解析界面添加一条 <code>CNAME</code> 记录，前面 <code>code-xxxxxxxx</code> 部分填在主机记录里，后面的 <code>ziyuan.baidu.com</code> 填在记录值里</p><p><img src="https://s1.328888.xyz/2022/04/02/LhRfd.png" alt=""></p><p>还可以选择 $\text{HTML}$标签 验证，我们需要获取的是红框内的这串代码</p><p><img src="https://s1.ax1x.com/2020/08/07/ahDIpt.png" alt=""></p><p>打开<code>站点配置文件</code>，添加以下两行，并把刚才的代码填在baidu那一行之后，注意与冒号之间要有空格。<br></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">google_site_verification:</span> </span><br><span class="line"><span class="attr">baidu-site-verification:</span> </span><br></pre></td></tr></tbody></table></figure><p></p><p>然后执行一下 <code>hexo cl &amp;&amp; hexo g</code>，在 <code>public</code> 中找到 <code>baidusitemap.xml</code> 和 <code>sitemap.xml</code>，用VSCode的查找和替换功能，把所有的 <code>http://yoursite.com/</code> 换成我们自己的域名。然后不需要<code>generate</code>，直接<code>deploy</code>就可以了。</p><h4 id="百度主动提交"><a href="#百度主动提交" class="headerlink" title="百度主动提交"></a>百度主动提交</h4><p>执行一下<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></tbody></table></figure><br>然后在<code>站点配置文件</code>中插入，填入你的<code>token</code><br><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu主动推送</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">5</span> <span class="comment">## 提交最新的五个链接</span></span><br><span class="line">  <span class="attr">host:</span>  <span class="comment">## 百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span>  <span class="comment">## 准入秘钥</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></tbody></table></figure><br>$\text{token}$ 是<code>主动推送（实时）</code>中的<p></p><p><img src="https://s1.ax1x.com/2020/08/07/ahgVln.png" alt=""></p><p>随后在<code>主题配置文件</code>中搜索找到 <code>baidu_push</code> 段落，将其改为<br></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p></p><p>之后在 <code>themes\next\layout\_partials\head.swig</code> 中搜索 <code>baidu_site_verification</code><br></p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{<span class="operator">%</span> <span class="keyword">if</span> theme.baidu_site_verification <span class="operator">%</span>}</span><br><span class="line">  <span class="operator">&lt;</span>meta name<span class="operator">=</span><span class="string">"baidu-site-verification"</span> content<span class="operator">=</span><span class="string">"{{ theme.qihu_site_verification }}"</span> <span class="operator">/&gt;</span></span><br><span class="line">{<span class="operator">%</span> endif <span class="operator">%</span>}</span><br></pre></td></tr></tbody></table></figure><br>把 <code>content</code> 后面换成自己的token，<font color="RED">只需要刚才的token，括号和引号都不需要。</font><p></p><h3 id="Google-SEO"><a href="#Google-SEO" class="headerlink" title="Google SEO"></a>Google SEO</h3><p>需要小梯子</p><p>Google更简单，而且收录更快</p><p>登录到 <a href="https://search.google.com/search-console?hl=zh-CN">Google Search Console</a>，首先选择资源类型，一般选择网域</p><p>Google 会自动帮你完成验证，或者指引你进行DNS验证，非常简便。如果没有成功，那么按照指导验证。比如 HTML 验证，复制 HTML 代码中的部分内容，填到刚才 <code>themes\next\layout\_partials\head.swig</code> 中的相应字段中。</p><p>然后提交站点地图</p><p><img src="https://s1.328888.xyz/2022/04/02/L4Rmq.png" alt=""></p><h3 id="Bing-SEO"><a href="#Bing-SEO" class="headerlink" title="Bing SEO"></a>Bing SEO</h3><p>同理，并且可以从 Google 导入</p><h3 id="360-SEO"><a href="#360-SEO" class="headerlink" title="360 SEO"></a>360 SEO</h3><p>大同小异，需要注意的是二级站点需要手动添加</p><h2 id="搜狗-SEO"><a href="#搜狗-SEO" class="headerlink" title="搜狗 SEO"></a>搜狗 SEO</h2><p>搜狗不支持CNAME验证，只能选择文件验证或是HTML验证，而且需要备案号和身份验证</p><h2 id="6-更换字体"><a href="#6-更换字体" class="headerlink" title="6. 更换字体"></a>6. 更换字体</h2><p>在 <code>主题配置文件</code> 中，查找 <code>font</code></p><p>修改为<br></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/e8aa61f7309555be.png" alt=""><p></p><p>随后打开<a href="https://fonts.google.com/?">Google Font</a>，挑选字体</p><p>然后可以自由设置lobal、title、heading这些不同区域的字体<br><img src="https://i.bmp.ovh/imgs/2021/08/340a546c9410e8f6.png" alt=""></p><h2 id="7-侧边栏目录跳转的修复"><a href="#7-侧边栏目录跳转的修复" class="headerlink" title="7. 侧边栏目录跳转的修复"></a>7. 侧边栏目录跳转的修复</h2><p>$\text{NexT}$ 的 <code>pull request</code> 里面有关于这个问题的解决，参见 <a href="https://github.com/theme-next/hexo-theme-next/pull/1540/commits/ec521c927dc10255977324284c1c667f2e220da7">fix: Chinese TOC cannot jump #1540</a></p><p>修改一下 <code>/themes/next/source/js/utils.js</code> 的部分代码即可</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">registerSidebarTOC: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">const</span> navItems = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.post-toc li'</span>);</span><br><span class="line">    <span class="keyword">const</span> sections = [...navItems].map(<span class="function"><span class="params">element</span> =&gt;</span> {</span><br><span class="line">      <span class="keyword">var</span> link = element.querySelector(<span class="string">'a.nav-link'</span>);</span><br><span class="line">      <span class="keyword">var</span> target = <span class="built_in">document</span>.getElementById(<span class="built_in">decodeURI</span>(link.getAttribute(<span class="string">'href'</span>)).replace(<span class="string">'#'</span>, <span class="string">''</span>));</span><br><span class="line">      <span class="comment">// TOC item animation navigate.</span></span><br><span class="line">      link.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="params">event</span> =&gt;</span> {</span><br><span class="line">        event.preventDefault();</span><br><span class="line">        <span class="comment">// var target = document.getElementById(event.currentTarget.getAttribute('href').replace('#', ''));</span></span><br><span class="line">        <span class="keyword">var</span> offset = target.getBoundingClientRect().top + <span class="built_in">window</span>.scrollY;</span><br><span class="line">        <span class="built_in">window</span>.anime({</span><br><span class="line">          <span class="attr">targets</span>  : <span class="built_in">document</span>.scrollingElement,</span><br><span class="line">          <span class="attr">duration</span> : <span class="number">500</span>,</span><br><span class="line">          <span class="attr">easing</span>   : <span class="string">'linear'</span>,</span><br><span class="line">          <span class="attr">scrollTop</span>: offset + <span class="number">10</span></span><br><span class="line">        });</span><br><span class="line">      });</span><br><span class="line">      <span class="comment">// return document.getElementById(link.getAttribute('href').replace('#', ''));</span></span><br><span class="line">      <span class="keyword">return</span> target;</span><br><span class="line">    });</span><br></pre></td></tr></tbody></table></figure><p><img src="https://i.bmp.ovh/imgs/2022/04/02/9bbb3a71991df759.png" alt=""></p><h1 id="第五部分：-text-Hexo-功能"><a href="#第五部分：-text-Hexo-功能" class="headerlink" title="第五部分： $\text{Hexo}$ 功能"></a>第五部分： $\text{Hexo}$ 功能</h1><h2 id="1-添加音乐功能"><a href="#1-添加音乐功能" class="headerlink" title="1. 添加音乐功能"></a>1. 添加音乐功能</h2><h3 id="直接插入文章当中"><a href="#直接插入文章当中" class="headerlink" title="直接插入文章当中"></a>直接插入文章当中</h3><h4 id="text-iframe-标签"><a href="#text-iframe-标签" class="headerlink" title="$\text{iframe}$标签"></a>$\text{iframe}$标签</h4><p>相当的简单</p><p>先到网易云音乐中中搜出你想要的音乐，然后点击<strong>生成外链播放器</strong></p><p>所需要的所有代码都在这个框框内了</p><p><img src="https://i.bmp.ovh/imgs/2021/08/4dda7a307388b911.png" alt=""></p><p>然后把这个代码粘贴到你的文章的$\text{.md}$文件中，就可以显示了</p><p><img src="https://img-service.csdnimg.cn/img_convert/74fbf69d9a51d681dc4b7e3fbfe31880.png" alt=""></p><h3 id="text-JavaScript-标签"><a href="#text-JavaScript-标签" class="headerlink" title="$\text{JavaScript}$标签"></a>$\text{JavaScript}$标签</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type="text/javascript" src="http://www.xiami.com/widget/player-single?uid=32329501&amp;sid=1776238762&amp;mode=js"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="使用-text-Hexo-tag-Aplayer-插件"><a href="#使用-text-Hexo-tag-Aplayer-插件" class="headerlink" title="使用$\text{Hexo-tag-Aplayer}$插件"></a>使用$\text{Hexo-tag-Aplayer}$插件</h3><p>$\text{hexo-tag-aplayer}$是$\text{Aplayer}$在$\text{Hexo}$上的插件，其配置可以参考<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></tbody></table></figure><p>在文章的markdown文档里添加<br></p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{<span class="operator">%</span> aplayer <span class="string">"她的睫毛"</span> <span class="string">"周杰伦"</span> <span class="string">"http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3"</span>  <span class="string">"http://home.ustc.edu.cn/~mmmwhy/jay.jpg"</span> <span class="string">"autoplay=false"</span> <span class="operator">%</span>}</span><br></pre></td></tr></tbody></table></figure><p></p><p><img src="https://img-service.csdnimg.cn/img_convert/ab972faca09544bce0c902b4e7f4d9c5.png" alt=""></p><hr><p><strong>以上两种都只能实现单篇文章内的播放，下面这一种是将播放器部署在所有界面</strong></p><h3 id="主页音乐播放器"><a href="#主页音乐播放器" class="headerlink" title="主页音乐播放器"></a>主页音乐播放器</h3><p>可以控制是否自动播放（<del>自动播放移动端不支持</del>）</p><p>修改  <code>themes/next/layout/_macro/sidebar.swig</code>文件</p><p>添加播放器内容<br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 音乐播放器 --&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    {% if theme.background_music %}</span><br><span class="line">        &lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="{{ theme.background_music }}"&gt;&lt;/iframe&gt;</span><br><span class="line">    {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><p></p><p>大概在这个位置<br><img src="https://i.bmp.ovh/imgs/2021/08/3a7327536258d31d.png" alt=""></p><p>在 <code>themes/next/_config.yml</code>主题配置文件中添加歌单地址配置</p><p><code>background_music: //music.163.com/outchain/player?type=0&amp;id=2120628564&amp;auto=1&amp;height=66</code><br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background_music: </span><br></pre></td></tr></tbody></table></figure><br>如图所示填入歌曲的部分HTML代码<p></p><h3 id="添加歌单"><a href="#添加歌单" class="headerlink" title="添加歌单"></a>添加歌单</h3><p>创建歌单，复制代码<br><img src="https://img-service.csdnimg.cn/img_convert/2030c8d1caec3531c2e5f29fea22be8a.png" alt=""></p><p>把 <code>height=90</code>改成 <code>height=66</code></p><p>最后贴一张我的博客的效果图<br><img src="https://img-service.csdnimg.cn/img_convert/3fea7cbbcb44d39fc27c426ac1d090ba.png" alt=""></p><hr><h3 id="也可以单独的做一个歌单页面"><a href="#也可以单独的做一个歌单页面" class="headerlink" title="也可以单独的做一个歌单页面"></a>也可以单独的做一个歌单页面</h3><p>最新版的 $\text{hexo-tag-aplayer}$ 已经支持了$\text{MetingJS}$的使用，可以直接解析网络平台的歌曲，首先要在站点配置文件中开启 $\text{meting}$ 模式，添加以下代码在配置文件的最后：<br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></tbody></table></figure><p></p><p>复制歌单的链接，然后复制歌单的$\text{id}$，例如 <a href="https://music.163.com/playlist?id=523845661&amp;userid=46562117">https://music.163.com/playlist?id=523845661&amp;userid=46562117</a> ，这个歌单的id就是523845661，公司名可以是tencent、netease或是其他公司，下面给出一个例子，打开 /Hexo/source/playlist/index.md文件，输入：<br></p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{<span class="operator">%</span> meting <span class="string">"7634442256"</span> <span class="string">"tencent"</span> <span class="string">"playlist"</span> <span class="string">"theme:#555"</span> <span class="string">"mutex:true"</span> <span class="string">"listmaxheight:340px"</span> <span class="string">"preload:auto"</span> <span class="operator">%</span>}</span><br></pre></td></tr></tbody></table></figure><br>这就是一个<a href="https://y.qq.com/n/m/detail/taoge/index.html?id=7634442256">$\text{QQ}$音乐</a>的歌单<p></p><p><strong>最终效果</strong><br><img src="https://i.bmp.ovh/imgs/2021/08/16537acd1ac46c85.png" alt="效果还是不错的"></p><h2 id="2-代码块一键复制"><a href="#2-代码块一键复制" class="headerlink" title="2. 代码块一键复制"></a>2. 代码块一键复制</h2><h3 id="1-新建代码复制模块文件"><a href="#1-新建代码复制模块文件" class="headerlink" title="1. 新建代码复制模块文件"></a>1. 新建代码复制模块文件</h3><p>在<code>/themes/next/layout/_third-party</code>下新建文件<code>copy-code.swig</code>，写入代码</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">{<span class="operator">%</span> <span class="keyword">if</span> theme.codeblock.copy_button.enable <span class="operator">%</span>}</span><br><span class="line">  <span class="operator">&lt;</span>style<span class="operator">&gt;</span></span><br><span class="line">    .copy<span class="operator">-</span>btn {</span><br><span class="line">      display: inline<span class="operator">-</span>block;</span><br><span class="line">      padding: 6px 12px;</span><br><span class="line">      font<span class="operator">-</span>size: 13px;</span><br><span class="line">      font<span class="operator">-</span>weight: <span class="number">700</span>;</span><br><span class="line">      line<span class="operator">-</span>height: 20px;</span><br><span class="line">      color: #<span class="number">333</span>;</span><br><span class="line">      white<span class="operator">-</span>space: nowrap;</span><br><span class="line">      vertical<span class="operator">-</span>align: middle;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      background<span class="operator">-</span>color: #eee;</span><br><span class="line">      background<span class="operator">-</span>image: linear<span class="operator">-</span>gradient(#fcfcfc, #eee);</span><br><span class="line">      border: 1px solid #d5d5d5;</span><br><span class="line">      border<span class="operator">-</span>radius: 3px;</span><br><span class="line">      user<span class="operator">-</span>select: none;</span><br><span class="line">      outline: <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .highlight<span class="operator">-</span>wrap .copy<span class="operator">-</span>btn {</span><br><span class="line">      transition: opacity .3s ease<span class="operator">-</span><span class="keyword">in</span><span class="operator">-</span>out;</span><br><span class="line">      opacity: <span class="number">0</span>;</span><br><span class="line">      padding: 2px 6px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 4px;</span><br><span class="line">      top: 8px;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .highlight<span class="operator">-</span>wrap:hover .copy<span class="operator">-</span>btn,</span><br><span class="line">    .highlight<span class="operator">-</span>wrap .copy<span class="operator">-</span>btn:focus {</span><br><span class="line">      opacity: <span class="number">1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    .highlight<span class="operator">-</span>wrap {</span><br><span class="line">      position: relative;</span><br><span class="line">    }</span><br><span class="line">  <span class="operator">&lt;/</span>style<span class="operator">&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="operator">&lt;</span>script<span class="operator">&gt;</span></span><br><span class="line">    $('.highlight').each(function (i, e) {</span><br><span class="line">      <span class="keyword">var</span> <span class="variable">$wrap</span> <span class="operator">=</span> $('<span class="operator">&lt;</span>div<span class="operator">&gt;</span>').addClass('highlight<span class="operator">-</span>wrap')</span><br><span class="line">      $(e).after(<span class="variable">$wrap</span>)</span><br><span class="line">      <span class="variable">$wrap</span>.append($('<span class="operator">&lt;</span>button<span class="operator">&gt;</span>').addClass('copy<span class="operator">-</span>btn').append('{{__(<span class="string">"post.copy_button"</span>)}}').on('click', function (e) {</span><br><span class="line">        <span class="keyword">var</span> code <span class="operator">=</span> $(this).parent().find('.code').find('.line').map(function (i, e) {</span><br><span class="line">          <span class="keyword">return</span> $(e).text()</span><br><span class="line">        }).toArray().join('\n')</span><br><span class="line">        <span class="keyword">var</span> ta <span class="operator">=</span> document.createElement('textarea')</span><br><span class="line">        document.body.appendChild(ta)</span><br><span class="line">        ta.style.position <span class="operator">=</span> 'absolute'</span><br><span class="line">        ta.style.top <span class="operator">=</span> '0px'</span><br><span class="line">        ta.style.left <span class="operator">=</span> '0px'</span><br><span class="line">        ta.value <span class="operator">=</span> code</span><br><span class="line">        ta.select()</span><br><span class="line">        ta.focus()</span><br><span class="line">        <span class="keyword">var</span> result <span class="operator">=</span> document.execCommand('copy')</span><br><span class="line">        document.body.removeChild(ta)</span><br><span class="line">        {<span class="operator">%</span> <span class="keyword">if</span> theme.codeblock.copy_button.show_result <span class="operator">%</span>}</span><br><span class="line">          <span class="keyword">if</span>(result)$(this).text('{{__(<span class="string">"post.copy_success"</span>)}}')</span><br><span class="line">          <span class="keyword">else</span> $(this).text('{{__(<span class="string">"post.copy_failure"</span>)}}')</span><br><span class="line">        {<span class="operator">%</span> endif <span class="operator">%</span>}</span><br><span class="line">        $(this).blur()</span><br><span class="line">      })).on('mouseleave', function (e) {</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$b</span> <span class="operator">=</span> $(this).find('.copy<span class="operator">-</span>btn')</span><br><span class="line">        setTimeout(function () {</span><br><span class="line">          <span class="variable">$b</span>.text('{{__(<span class="string">"post.copy_button"</span>)}}')</span><br><span class="line">        }, <span class="number">300</span>)</span><br><span class="line">      }).append(e)</span><br><span class="line">    })</span><br><span class="line">  <span class="operator">&lt;/</span>script<span class="operator">&gt;</span></span><br><span class="line">{<span class="operator">%</span> endif <span class="operator">%</span>}</span><br></pre></td></tr></tbody></table></figure><h3 id="2-引用文件"><a href="#2-引用文件" class="headerlink" title="2. 引用文件"></a>2. 引用文件</h3><p>编辑<code>/themes/next/layout/_layout.swig</code>文件，在文件末尾<code>&lt;/body&gt;</code>前添加一行代码<br></p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{<span class="operator">%</span> include '_third<span class="operator">-</span>party<span class="operator">/</span>copy<span class="operator">-</span>code.swig' <span class="operator">%</span>}</span><br></pre></td></tr></tbody></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/f1943d6895088094.png" alt=""><p></p><h3 id="3-添加按钮上显示的语言"><a href="#3-添加按钮上显示的语言" class="headerlink" title="3. 添加按钮上显示的语言"></a>3. 添加按钮上显示的语言</h3><p>在<code>/themes/next/languages/zh-Hans.yml</code>文件的<strong>post</strong>板块中添加下列代码<br></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">copy_button:</span> <span class="string">复制</span></span><br><span class="line"><span class="attr">copy_success:</span> <span class="string">复制成功</span></span><br><span class="line"><span class="attr">copy_failure:</span> <span class="string">复制失败</span></span><br></pre></td></tr></tbody></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/a102306bc2fe1b19.png" alt=""><p></p><h3 id="4-在主题配置文件中添加开关"><a href="#4-在主题配置文件中添加开关" class="headerlink" title="4. 在主题配置文件中添加开关"></a>4. 在主题配置文件中添加开关</h3><p>需要注意的是，NexT version 5.1.4是没有codeblock选项的，需要在<code>主题配置文件</code>中添加<br></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">border_radius:</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result·</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/b548e9932c0dc87e.png" alt=""><p></p><h2 id="3-添加顶部加载条"><a href="#3-添加顶部加载条" class="headerlink" title="3. 添加顶部加载条"></a>3. 添加顶部加载条</h2><p>配置<code>主题配置文件_config.yml</code>，将<code>pace: false</code>改为<code>pace: true</code>即可</p><p>有多种样式可供选择</p><p><img src="https://i.bmp.ovh/imgs/2021/08/46f82ef18b29ce20.png" alt=""></p><h2 id="4-修改底部标签"><a href="#4-修改底部标签" class="headerlink" title="4. 修改底部标签"></a>4. 修改底部标签</h2><p>打开<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel="tag"&gt;</code>，将 <code>#</code> 换成<br></p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>i <span class="class"><span class="keyword">class</span>="<span class="title">fa</span> <span class="title">fa</span>-<span class="title">tag</span>"&gt;&lt;/<span class="title">i</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><br><img src="https://i.bmp.ovh/imgs/2021/08/4efceeb912d4b27f.png" alt=""><p></p><h2 id="5-文本提示"><a href="#5-文本提示" class="headerlink" title="5. 文本提示"></a>5. 文本提示</h2><p>插件为 <code>hexo-tag-hint</code>，实例：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">穹妹经常带着{% hint '黑色的兔子布偶' '小时候悠送的' %}，在悠的面前常常抱怨且任性</span><br></pre></td></tr></tbody></table></figure><p>效果</p><p><strong>穹妹经常带着<span class="hint--info hint--rounded hint--top" data-hint="小时候悠送的" ontouchstart="">黑色的兔子布偶</span>，在悠的面前常常抱怨且任性</strong></p><p>注意字符串中有单引号的时候<strong>加反斜线转义</strong></p><h2 id="6-自定义子页面"><a href="#6-自定义子页面" class="headerlink" title="6. 自定义子页面"></a>6. 自定义子页面</h2><p>Hexo 自带的几个子页面未免显得太多单薄，因此我添加了豆瓣读书，豆瓣电影的子页面来充实内容</p><center><font size="5" color="Orange">未完待续</font></center>]]></content>
    
    
    <summary type="html">&lt;p&gt;$\text{Hexo}$ 是一个优秀的轻量级博客系统，本身可以兼容各种功能&lt;/p&gt;
&lt;p&gt;而 $\text{NexT}$，则是一个集成有非常多功能、并且兼容性极好&lt;/p&gt;
&lt;p&gt;因此本文选择了 $\text{Hexo+NexT}$ 的搭配&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://wincer.space/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://wincer.space/tags/Hexo/"/>
    
  </entry>
  
</feed>
